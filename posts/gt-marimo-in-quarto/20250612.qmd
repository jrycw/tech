---
title: "Great Tables with marimo in Quarto"
html-table-processing: none
date: "2025-06-12"
categories: [python, gt, marimo]
jupyter: python3
image: "gt_marimo_in_quarto.png"
filters:
    - marimo-team/marimo
---

This is a follow-up to my [previous post](../marimo-in-quarto/20250607.qmd). 

![](gt_marimo_in_quarto.png){fig-align="center" fig-alt="Great Tables with marimo in Quarto"}

## marimo
::: {.callout-note}
# Give It a Sec – WASM Magic Happening
The widgets may take a few moments to load, as they rely on WebAssembly under the hood.
::: 

Here, I demonstrate how marimo widgets can be embedded in Great Tables by wrapping them with the `html()` function provided by the library. This allows interactive widgets to control the table's appearance in a Quarto environment via WASM — a surprisingly powerful capability, in my opinion.

```python {.marimo}
import marimo as mo
import polars as pl
from great_tables import GT, html
```

```python {.marimo}
data = {
    "col1": [2, 5, 7, 10, 15],
    "col2": ["x", "y", "y", "z", "z"],
    "color": [
        "lightgrey",
        "lightblue",
        "lightblue",
        "papayawhip",
        "papayawhip",
    ],
}
df = pl.DataFrame(data)
print(df)
```

```python {.marimo}
style_widget = mo.ui.slider(1, 6, label="Style Number")

_colors = ["blue", "cyan", "pink", "green", "red", "gray"]
color_widget = mo.ui.radio(
    options=_colors, value=_colors[0], label="Style Color", inline=True
)

row_striping_widget = mo.ui.switch(value=True, label="Row Striping?")

gt = (
    GT(df)
    .tab_header(html(style_widget), html(color_widget))
    .tab_source_note(html(row_striping_widget))
    .opt_align_table_header("left")
)
```

```python {.marimo}
#| echo: false
gt.opt_stylize(
    style=style_widget.value,
    color=color_widget.value,
    add_row_striping=row_striping_widget.value,
)
```

Check out the full marimo code below or view it on [molab](https://molab.marimo.io/notebooks/nb_En2k3WtpkE1Uf6a8QvCS7n).
```{python}
#| code-fold: true
#| eval: false
#| code-summary: Show full code
{{< include mo_gt_in_quarto.py >}}
```

::: {.callout-warning}
# Disclaimer
This post was drafted by me, with AI assistance to refine the content.
::: 