<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Tech&#39;n&#39;Take</title>
<link>https://tech.ycwu.space/</link>
<atom:link href="https://tech.ycwu.space/index.xml" rel="self" type="application/rss+xml"/>
<description>This is Jerry Wu&#39;s Tech&#39;n&#39;take.</description>
<generator>quarto-1.6.40</generator>
<lastBuildDate>Mon, 10 Feb 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Weekend Challenge - Effective Data Visualization with Polars and Matplotlib</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/20250210.html</link>
  <description><![CDATA[ 





<p>It was an honor to be one of the reviewers for Matt Harrison’s new book, <a href="https://store.metasnake.com/effective-viz"><em>Effective Visualization</em></a>. If you’re looking to deepen your understanding of how to use Pandas and Matplotlib to craft compelling data stories, this book is a must-read.</p>
<p>Last weekend, I decided to convert some of the Pandas code from the book into Polars just for fun, and I’d like to share an example in this post. You can find the original Pandas code in the <a href="link">repo</a> (empty link for now).</p>
<p>The final figure, shown below, visualizes temperature trends for the ski season in Alta over the past few decades.</p>
<div id="1defc956" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Show full code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> highlight_text <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ax_text</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colormaps</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://github.com/mattharrison/datasets/raw/refs/heads/master/data/alta-noaa-1980-2019.csv</span></span>
<span id="cb1-10">data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alta-noaa-1980-2019.csv"</span></span>
<span id="cb1-11">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>]</span>
<span id="cb1-12">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.scan_csv(data_path).select(columns).collect()</span>
<span id="cb1-13"></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_season_expr(col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb1-17">        (</span>
<span id="cb1-18">            pl.when((pl.col(col).dt.month().is_between(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, closed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>)))</span>
<span id="cb1-19">            .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer "</span>))</span>
<span id="cb1-20">            .otherwise(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski "</span>))</span>
<span id="cb1-21">        )</span>
<span id="cb1-22">        .add(</span>
<span id="cb1-23">            pl.when(pl.col(col).dt.month() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb1-24">            .then(pl.col(col).dt.year().cast(pl.String))</span>
<span id="cb1-25">            .otherwise(pl.col(col).dt.year().add(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).cast(pl.String))</span>
<span id="cb1-26">        )</span>
<span id="cb1-27">        .alias(alias)</span>
<span id="cb1-28">    )</span>
<span id="cb1-29"></span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_day_of_season_expr(</span>
<span id="cb1-32">    col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb1-33">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb1-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb1-35">        (pl.col(col) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pl.col(col).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()).dt.total_days().over(group_col).alias(alias)</span>
<span id="cb1-36">    )</span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb1-40">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span></span>
<span id="cb1-41">    figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pts</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> points_to_inches(points):</span>
<span id="cb1-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span></span>
<span id="cb1-45"></span>
<span id="cb1-46">    figsize_inches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [points_to_inches(dim) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> figsize]</span>
<span id="cb1-47"></span>
<span id="cb1-48">    heading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span></span>
<span id="cb1-49">    heading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span></span>
<span id="cb1-50">    subheading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb1-51">    subheading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb1-52">    source_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span></span>
<span id="cb1-53">    source_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"light"</span></span>
<span id="cb1-54">    axis_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb1-55">    axis_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb1-56"></span>
<span id="cb1-57">    grey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aaaaaa"</span></span>
<span id="cb1-58">    red <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e3120b"</span></span>
<span id="cb1-59">    blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0000ff"</span></span>
<span id="cb1-60">    cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormaps.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grays"</span>)</span>
<span id="cb1-61"></span>
<span id="cb1-62">    layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]]</span>
<span id="cb1-63">    fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplot_mosaic(</span>
<span id="cb1-64">        layout,</span>
<span id="cb1-65">        gridspec_kw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height_ratios"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]},</span>
<span id="cb1-66">        figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize_inches,</span>
<span id="cb1-67">        dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb1-68">        constrained_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb1-69">    )</span>
<span id="cb1-70"></span>
<span id="cb1-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Title -----</span></span>
<span id="cb1-72">    ax_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb1-73">    ax_title.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-74">    sub_props <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: subheading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: subheading_fontweight}</span>
<span id="cb1-75">    ax_text(</span>
<span id="cb1-76">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;Alta Ski Resort&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;Temperature trends by &gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;decade&gt;&lt; and &gt;&lt;2019&gt;"</span>,</span>
<span id="cb1-77">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-78">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-79">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>heading_fontsize,</span>
<span id="cb1-80">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax_title,</span>
<span id="cb1-81">        va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb1-82">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb1-83">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-84">        highlight_textprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb1-85">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: heading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: heading_fontweight},</span>
<span id="cb1-86">            sub_props,</span>
<span id="cb1-87">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: blue, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb1-88">            sub_props,</span>
<span id="cb1-89">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: red, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb1-90">        ],</span>
<span id="cb1-91">    )</span>
<span id="cb1-92"></span>
<span id="cb1-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Plot -----</span></span>
<span id="cb1-94">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>]</span>
<span id="cb1-95">    season_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski"</span>)).pivot(</span>
<span id="cb1-96">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname, values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span></span>
<span id="cb1-97">    )</span>
<span id="cb1-98">    season_temps_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps[idx_colname]</span>
<span id="cb1-99"></span>
<span id="cb1-100">    columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.columns</span>
<span id="cb1-101">    columns.remove(idx_colname)</span>
<span id="cb1-102">    columns.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)</span>
<span id="cb1-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(columns):</span>
<span id="cb1-104">        color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns))</span>
<span id="cb1-105">        ax.plot(</span>
<span id="cb1-106">            season_temps_index,</span>
<span id="cb1-107">            season_temps[column],</span>
<span id="cb1-108">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-109">            linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-110">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb1-111">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-112">        )</span>
<span id="cb1-113"></span>
<span id="cb1-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ---- Decade Averages ----</span></span>
<span id="cb1-115">    decades <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>]</span>
<span id="cb1-116">    blues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0055EE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0033CC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0011AA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3377FF"</span>]</span>
<span id="cb1-117">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decade, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(decades, blues):</span>
<span id="cb1-118">        match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(decade)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1980 -&gt; "198", 2010 -&gt; "201"</span></span>
<span id="cb1-119">        decade_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(cs.contains(match)).mean_horizontal()</span>
<span id="cb1-120">        ax.plot(season_temps_index, decade_temps, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-121"></span>
<span id="cb1-122">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add label to right of line</span></span>
<span id="cb1-123">        last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decade_temps.last()</span>
<span id="cb1-124"></span>
<span id="cb1-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>:</span>
<span id="cb1-126">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>:</span>
<span id="cb1-128">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb1-129"></span>
<span id="cb1-130">        ax.text(</span>
<span id="cb1-131">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>,</span>
<span id="cb1-132">            last_y_label,</span>
<span id="cb1-133">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decade<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb1-134">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb1-135">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb1-136">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize,</span>
<span id="cb1-137">            fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight,</span>
<span id="cb1-138">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-139">        )</span>
<span id="cb1-140">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add dot to start and end of each line</span></span>
<span id="cb1-141">        ax.plot(</span>
<span id="cb1-142">            season_temps_index.first(),</span>
<span id="cb1-143">            decade_temps.first(),</span>
<span id="cb1-144">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-145">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-146">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-147">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-148">        )</span>
<span id="cb1-149">        ax.plot(</span>
<span id="cb1-150">            season_temps_index.last(),</span>
<span id="cb1-151">            decade_temps.last(),</span>
<span id="cb1-152">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-153">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-154">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-155">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-156">        )</span>
<span id="cb1-157"></span>
<span id="cb1-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ski 2019 ------</span></span>
<span id="cb1-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # plot `Ski 2019` in red</span></span>
<span id="cb1-160">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(idx_colname, cs.by_name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)).drop_nulls()</span>
<span id="cb1-161">    ski_2019_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019[idx_colname]</span>
<span id="cb1-162">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019.drop([idx_colname]).to_series()</span>
<span id="cb1-163">    ax.plot(ski_2019_index, ski_2019, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-164"></span>
<span id="cb1-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add dot to start and end of each line</span></span>
<span id="cb1-166">    ax.plot(</span>
<span id="cb1-167">        ski_2019_index.first(),</span>
<span id="cb1-168">        ski_2019.first(),</span>
<span id="cb1-169">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-170">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb1-171">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-172">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-173">    )</span>
<span id="cb1-174">    ax.plot(</span>
<span id="cb1-175">        ski_2019_index.last(),</span>
<span id="cb1-176">        ski_2019.last(),</span>
<span id="cb1-177">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-178">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb1-179">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-180">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-181">    )</span>
<span id="cb1-182"></span>
<span id="cb1-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ticks &amp; Lines ------</span></span>
<span id="cb1-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # remove spines</span></span>
<span id="cb1-185">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> side <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>]:</span>
<span id="cb1-186">        ax.spines[side].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-187"></span>
<span id="cb1-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add horizontal line at 32F</span></span>
<span id="cb1-189">    ax.axhline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-190"></span>
<span id="cb1-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y ticks</span></span>
<span id="cb1-192">    ax.set_yticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>])</span>
<span id="cb1-193"></span>
<span id="cb1-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y limit</span></span>
<span id="cb1-195">    ax.set_ylim([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>])</span>
<span id="cb1-196"></span>
<span id="cb1-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set x label</span></span>
<span id="cb1-198">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Day of season"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight)</span>
<span id="cb1-199"></span>
<span id="cb1-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Source ------</span></span>
<span id="cb1-201">    ax_notes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]</span>
<span id="cb1-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add source</span></span>
<span id="cb1-203">    ax_notes.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-204">    ax_notes.text(</span>
<span id="cb1-205">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-206">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-207">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source: NOAA"</span>,</span>
<span id="cb1-208">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontsize,</span>
<span id="cb1-209">        fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontweight,</span>
<span id="cb1-210">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grey,</span>
<span id="cb1-211">    )</span>
<span id="cb1-212">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_</span>
<span id="cb1-213"></span>
<span id="cb1-214"></span>
<span id="cb1-215">idx_colname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb1-216"></span>
<span id="cb1-217">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-218">    df.with_columns(</span>
<span id="cb1-219">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.to_datetime(),</span>
<span id="cb1-220">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).interpolate(),</span>
<span id="cb1-221">    )</span>
<span id="cb1-222">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>)</span>
<span id="cb1-223">    .with_columns(</span>
<span id="cb1-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Caveat: Cannot be placed in the previous `with_columns()`</span></span>
<span id="cb1-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># due to different statuses of `TOBS`.</span></span>
<span id="cb1-226">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).rolling_mean(window_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>),</span>
<span id="cb1-227">        get_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>),</span>
<span id="cb1-228">    )</span>
<span id="cb1-229">    .with_columns(</span>
<span id="cb1-230">        add_day_of_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname)</span>
<span id="cb1-231">    )</span>
<span id="cb1-232">    .pipe(partial(plot_temps, idx_colname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname))</span>
<span id="cb1-233">)</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/alta_ski_resort.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Alta ski resort"></p>
</figure>
</div>
<section id="loading-the-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-data">Loading the Data</h2>
<p>To begin, we load the dataset, focusing on two key columns:</p>
<ul>
<li><strong><code>DATE</code></strong>: The dates.</li>
<li><strong><code>TOBS</code></strong>: The recorded temperature in Fahrenheit.</li>
</ul>
<div id="04712673" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> highlight_text <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ax_text</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colormaps</span>
<span id="cb2-8"></span>
<span id="cb2-9">data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alta-noaa-1980-2019.csv"</span></span>
<span id="cb2-10">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>]</span>
<span id="cb2-11">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.scan_csv(data_path).select(columns).collect()</span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>shape: (5, 2)
┌────────────┬──────┐
│ DATE       ┆ TOBS │
│ ---        ┆ ---  │
│ str        ┆ i64  │
╞════════════╪══════╡
│ 1980-01-01 ┆ 25   │
│ 1980-01-02 ┆ 18   │
│ 1980-01-03 ┆ 18   │
│ 1980-01-04 ┆ 27   │
│ 1980-01-05 ┆ 34   │
└────────────┴──────┘</code></pre>
</div>
</div>
</section>
<section id="data-processing-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="data-processing-pipeline">Data Processing Pipeline</h2>
<p>Here’s the pipeline for generating the final figure:</p>
<div class="sourceCode" id="annotated-cell-3" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-3-1">idx_colname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-3-2"></span>
<span id="annotated-cell-3-3">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-3-4">    df.with_columns(</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-3-5" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.to_datetime(),</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-3-6" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).interpolate(),</span>
<span id="annotated-cell-3-7">    )</span>
<span id="annotated-cell-3-8">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>)</span>
<span id="annotated-cell-3-9">    .with_columns(</span>
<span id="annotated-cell-3-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Caveat: Cannot be placed in the previous `with_columns()`</span></span>
<span id="annotated-cell-3-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># due to different statuses of `TOBS`.</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-3-12" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).rolling_mean(window_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>),</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-3-13" class="code-annotation-target">        get_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>),</span>
<span id="annotated-cell-3-14">    )</span>
<span id="annotated-cell-3-15">    .with_columns(</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="5" onclick="event.preventDefault();">5</a><span id="annotated-cell-3-16" class="code-annotation-target">        add_day_of_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname)</span>
<span id="annotated-cell-3-17">    ) </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="6" onclick="event.preventDefault();">6</a><span id="annotated-cell-3-18" class="code-annotation-target">    .pipe(partial(plot_temps, idx_colname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname))</span>
<span id="annotated-cell-3-19">)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-3" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="5" data-code-annotation="1">Convert the <code>DATE</code> column to a datetime format.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="6" data-code-annotation="2">Perform interpolation on the <code>TOBS</code> column.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="12" data-code-annotation="3">Compute a 28-day rolling average for <code>TOBS</code>.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="13" data-code-annotation="4">Use <code>get_season_expr()</code> to categorize each date into a <code>SEASON</code>.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="16" data-code-annotation="5">Apply <code>add_day_of_season_expr()</code> to calculate <code>DAY_OF_SEASON</code>, representing days elapsed since the start of the season.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="18" data-code-annotation="6">Use <code>plot_temps()</code> to generate the final visualization with Matplotlib.</span>
</dd>
</dl>
<p>The first three steps involve straightforward Polars expressions. In the following sections, we’ll dive deeper into steps 4 to 6.</p>
</section>
<section id="categorizing-dates-into-summer-and-ski-seasons" class="level2">
<h2 class="anchored" data-anchor-id="categorizing-dates-into-summer-and-ski-seasons">Categorizing Dates into <code>Summer</code> and <code>Ski</code> Seasons</h2>
<p>To analyze seasonal trends, we classify dates into two categories:</p>
<ul>
<li><strong><code>Summer</code></strong>: Covers May through October.<br>
</li>
<li><strong><code>Ski</code></strong>: Covers November through April.</li>
</ul>
<p>If a date falls in November or December, it is assigned to the following year’s season. For example, <code>2015-10-31</code> is categorized as <code>Summer 2015</code>, while <code>2015-11-01</code> belongs to <code>Ski 2016</code>.</p>
<p>To implement this logic, we define <code>get_season_expr()</code>, which leverages Polars’ <a href="https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.when.html">when-then-otherwise</a> expressions to determine the season and year.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_season_expr(col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb4-3">        (</span>
<span id="cb4-4">            pl.when((pl.col(col).dt.month().is_between(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, closed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>)))</span>
<span id="cb4-5">            .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer "</span>))</span>
<span id="cb4-6">            .otherwise(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski "</span>))</span>
<span id="cb4-7">        )</span>
<span id="cb4-8">        .add(</span>
<span id="cb4-9">            pl.when(pl.col(col).dt.month() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb4-10">            .then(pl.col(col).dt.year().cast(pl.String))</span>
<span id="cb4-11">            .otherwise(pl.col(col).dt.year().add(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).cast(pl.String))</span>
<span id="cb4-12">        )</span>
<span id="cb4-13">        .alias(alias)</span>
<span id="cb4-14">    )</span></code></pre></div>
<p>In this function:</p>
<ul>
<li>If the month is between May and October, the function assigns <code>"Summer "</code>. Otherwise, it assigns <code>"Ski "</code> (with a trailing space for concatenation).<br>
</li>
<li>The year is determined based on the month: dates from January to October retain their current year, while those in November and December are shifted to the next year.</li>
</ul>
<p>By applying this function, we can add a <code>SEASON</code> column to a Polars DataFrame, ensuring each date is categorized correctly.</p>
</section>
<section id="calculating-the-total-days-for-each-season" class="level2">
<h2 class="anchored" data-anchor-id="calculating-the-total-days-for-each-season">Calculating the Total Days for Each Season</h2>
<p>Once we have the seasonal categories, we calculate <code>DAY_OF_SEASON</code>, which tracks the number of days elapsed within each season. This is achieved using the <a href="https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.Expr.over.html">pl.expr.over()</a> expression, which operates similarly to Pandas’ <code>groupby().transform()</code>, applying transformations within groups.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_day_of_season_expr(</span>
<span id="cb5-2">    col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb5-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb5-5">        (pl.col(col) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pl.col(col).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()).dt.total_days().over(group_col).alias(alias)</span>
<span id="cb5-6">    )</span></code></pre></div>
</section>
<section id="visualizing-temperature-trends-with-matplotlib" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-temperature-trends-with-matplotlib">Visualizing Temperature Trends with Matplotlib</h2>
<p>With the data prepared, we move on to plotting. Since <code>plot_temps()</code> is quite long, we’ll break it down into several parts for easier explanation</p>
<section id="setting-up-the-figure" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-the-figure">Setting Up the Figure</h3>
<p>We start by defining some parameters and using <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.subplot_mosaic.html">plt.subplot_mosaic()</a> to create the figure layout. This provides structured axes for different elements of the visualization.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb6-2">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span></span>
<span id="cb6-3">    figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pts</span></span>
<span id="cb6-4"></span>
<span id="cb6-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> points_to_inches(points):</span>
<span id="cb6-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">    figsize_inches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [points_to_inches(dim) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> figsize]</span>
<span id="cb6-9"></span>
<span id="cb6-10">    heading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span></span>
<span id="cb6-11">    heading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span></span>
<span id="cb6-12">    subheading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb6-13">    subheading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb6-14">    source_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span></span>
<span id="cb6-15">    source_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"light"</span></span>
<span id="cb6-16">    axis_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb6-17">    axis_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb6-18"></span>
<span id="cb6-19">    grey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aaaaaa"</span></span>
<span id="cb6-20">    red <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e3120b"</span></span>
<span id="cb6-21">    blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0000ff"</span></span>
<span id="cb6-22">    cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormaps.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grays"</span>)</span>
<span id="cb6-23"></span>
<span id="cb6-24">    layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]]</span>
<span id="cb6-25">    fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplot_mosaic(</span>
<span id="cb6-26">        layout,</span>
<span id="cb6-27">        gridspec_kw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height_ratios"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]},</span>
<span id="cb6-28">        figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize_inches,</span>
<span id="cb6-29">        dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb6-30">        constrained_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-31">    )</span>
<span id="cb6-32">    ...</span>
<span id="cb6-33">    </span></code></pre></div>
</section>
<section id="adding-the-title" class="level3">
<h3 class="anchored" data-anchor-id="adding-the-title">Adding the Title</h3>
<p>For the title, we use <code>ax_text()</code> from the <a href="https://github.com/znstrider/highlight_text">HighlightText</a> library, which allows selective styling of text enclosed in <code>&lt; &gt;</code>. This lets us highlight key parts of the title, such as <code>&lt;Alta Ski Resort&gt;</code>, <code>&lt;Temperature trends by &gt;</code>, <code>&lt;decade&gt;</code>, <code>&lt; and &gt;</code>, and <code>&lt;2019&gt;</code>, with custom formatting.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb7-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb7-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb7-4">    ...</span>
<span id="cb7-5"></span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Title -----</span></span>
<span id="cb7-7">    ax_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb7-8">    ax_title.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb7-9">    sub_props <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: subheading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: subheading_fontweight}</span>
<span id="cb7-10">    ax_text(</span>
<span id="cb7-11">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;Alta Ski Resort&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;Temperature trends by &gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;decade&gt;&lt; and &gt;&lt;2019&gt;"</span>,</span>
<span id="cb7-12">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-13">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-14">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>heading_fontsize,</span>
<span id="cb7-15">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax_title,</span>
<span id="cb7-16">        va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb7-17">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb7-18">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb7-19">        highlight_textprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb7-20">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: heading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: heading_fontweight},</span>
<span id="cb7-21">            sub_props,</span>
<span id="cb7-22">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: blue, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb7-23">            sub_props,</span>
<span id="cb7-24">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: red, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb7-25">        ],</span>
<span id="cb7-26">    )</span></code></pre></div>
</section>
<section id="plotting-seasonal-trends" class="level3">
<h3 class="anchored" data-anchor-id="plotting-seasonal-trends">Plotting Seasonal Trends</h3>
<p>Next, we generate the main plot by:</p>
<ol type="1">
<li>Filtering the dataset for <code>Ski</code> seasons.<br>
</li>
<li>Pivoting the table to organize <code>TMEAN</code> values by <code>DAY_OF_SEASON</code> and <code>SEASON</code>.<br>
</li>
<li>Using <code>ax.plot()</code> to draw a separate line for each <code>Ski</code> season.</li>
</ol>
<div class="sourceCode" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-8-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-8-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-8-4">    ...</span>
<span id="annotated-cell-8-5"></span>
<span id="annotated-cell-8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Plot -----</span></span>
<span id="annotated-cell-8-7">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>]</span>
<span id="annotated-cell-8-8">    season_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski"</span>)).pivot(</span>
<span id="annotated-cell-8-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname, values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span></span>
<span id="annotated-cell-8-10">    )</span>
<span id="annotated-cell-8-11">    season_temps_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps[idx_colname]</span>
<span id="annotated-cell-8-12"></span>
<span id="annotated-cell-8-13">    columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.columns</span>
<span id="annotated-cell-8-14">    columns.remove(idx_colname)</span>
<span id="annotated-cell-8-15">    columns.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)</span>
<span id="annotated-cell-8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(columns):</span>
<span id="annotated-cell-8-17">        color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns))</span>
<span id="annotated-cell-8-18">        ax.plot(</span>
<span id="annotated-cell-8-19">            season_temps_index,</span>
<span id="annotated-cell-8-20">            season_temps[column],</span>
<span id="annotated-cell-8-21">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-8-22">            linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-8-23">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="annotated-cell-8-24">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-8-25">        )</span></code></pre></div>
<p>To illustrate long-term trends, we overlay four lines representing the average temperature trends for different decades, marking their start and end points with dots for emphasis.</p>
<div class="sourceCode" id="annotated-cell-9" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-9-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-9-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-9-4">    ...</span>
<span id="annotated-cell-9-5"></span>
<span id="annotated-cell-9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ---- Decade Averages ----</span></span>
<span id="annotated-cell-9-7">    decades <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>]</span>
<span id="annotated-cell-9-8">    blues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0055EE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0033CC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0011AA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3377FF"</span>]</span>
<span id="annotated-cell-9-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decade, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(decades, blues):</span>
<span id="annotated-cell-9-10">        match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(decade)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1980 -&gt; "198", 2010 -&gt; "201"</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-9-11" class="code-annotation-target">        decade_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(cs.contains(match)).mean_horizontal()</span>
<span id="annotated-cell-9-12">        ax.plot(season_temps_index, decade_temps, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-9-13"></span>
<span id="annotated-cell-9-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add label to right of line</span></span>
<span id="annotated-cell-9-15">        last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decade_temps.last()</span>
<span id="annotated-cell-9-16"></span>
<span id="annotated-cell-9-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>:</span>
<span id="annotated-cell-9-18">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="annotated-cell-9-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>:</span>
<span id="annotated-cell-9-20">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="annotated-cell-9-21"></span>
<span id="annotated-cell-9-22">        ax.text(</span>
<span id="annotated-cell-9-23">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>,</span>
<span id="annotated-cell-9-24">            last_y_label,</span>
<span id="annotated-cell-9-25">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decade<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="annotated-cell-9-26">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="annotated-cell-9-27">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="annotated-cell-9-28">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize,</span>
<span id="annotated-cell-9-29">            fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight,</span>
<span id="annotated-cell-9-30">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-31">        )</span>
<span id="annotated-cell-9-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add dot to start and end of each line</span></span>
<span id="annotated-cell-9-33">        ax.plot(</span>
<span id="annotated-cell-9-34">            season_temps_index.first(),</span>
<span id="annotated-cell-9-35">            decade_temps.first(),</span>
<span id="annotated-cell-9-36">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-9-37">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-38">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-9-39">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-9-40">        )</span>
<span id="annotated-cell-9-41">        ax.plot(</span>
<span id="annotated-cell-9-42">            season_temps_index.last(),</span>
<span id="annotated-cell-9-43">            decade_temps.last(),</span>
<span id="annotated-cell-9-44">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-9-45">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-46">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-9-47">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-9-48">        )</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-9" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="11" data-code-annotation="1">We leverage two powerful features of Polars: <a href="https://docs.pola.rs/api/python/dev/reference/selectors.html">Polars selectors</a>, which enable efficient column selection based on name patterns to extract data for each decade (<code>cs.contains(match)</code>), and <a href="https://docs.pola.rs/api/python/dev/reference/dataframe/api/polars.DataFrame.mean_horizontal.html">df.mean_horizontal()</a>, which performs vectorized operations across columns to compute the average temperature for each decade.</span>
</dd>
</dl>
</section>
<section id="highlighting-the-2019-ski-season" class="level3">
<h3 class="anchored" data-anchor-id="highlighting-the-2019-ski-season">Highlighting the 2019 Ski Season</h3>
<p>To make <code>Ski 2019</code> stand out, we plot its trend in red and highlight its start and end points with dots, similar to the decade lines.</p>
<div class="sourceCode" id="annotated-cell-10" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-10-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-10-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-10-4">    ...</span>
<span id="annotated-cell-10-5"></span>
<span id="annotated-cell-10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ski 2019 ------</span></span>
<span id="annotated-cell-10-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # plot `Ski 2019` in red</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-10-8" class="code-annotation-target">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(idx_colname, cs.by_name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)).drop_nulls()</span>
<span id="annotated-cell-10-9">    ski_2019_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019[idx_colname]</span>
<span id="annotated-cell-10-10">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019.drop([idx_colname]).to_series()</span>
<span id="annotated-cell-10-11">    ax.plot(ski_2019_index, ski_2019, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-10-12"></span>
<span id="annotated-cell-10-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add dot to start and end of each line</span></span>
<span id="annotated-cell-10-14">    ax.plot(</span>
<span id="annotated-cell-10-15">        ski_2019_index.first(),</span>
<span id="annotated-cell-10-16">        ski_2019.first(),</span>
<span id="annotated-cell-10-17">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-10-18">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="annotated-cell-10-19">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-20">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-21">    )</span>
<span id="annotated-cell-10-22">    ax.plot(</span>
<span id="annotated-cell-10-23">        ski_2019_index.last(),</span>
<span id="annotated-cell-10-24">        ski_2019.last(),</span>
<span id="annotated-cell-10-25">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-10-26">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="annotated-cell-10-27">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-28">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-29">    )</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-10" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-10" data-code-lines="8" data-code-annotation="1">We use the Polars selector (<code>cs.by_name()</code>) to isolate the <code>Ski 2019</code> data.</span>
</dd>
</dl>
</section>
<section id="refinements-for-clarity" class="level3">
<h3 class="anchored" data-anchor-id="refinements-for-clarity">Refinements for Clarity</h3>
<p>To enhance readability, we refine the visualization by adjusting:</p>
<ul>
<li><strong>Spines</strong>: Removing unnecessary borders.<br>
</li>
<li><strong>Reference Line</strong>: Adding a horizontal dashed line at 32°F for context.<br>
</li>
<li><strong>Ticks &amp; Limits</strong>: Setting appropriate y-axis ticks and limits.<br>
</li>
<li><strong>Labels</strong>: Customizing the x-axis label for clarity.</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb8-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb8-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb8-4">    ...</span>
<span id="cb8-5"></span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ticks &amp; Lines ------</span></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # remove spines</span></span>
<span id="cb8-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> side <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>]:</span>
<span id="cb8-9">        ax.spines[side].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add horizontal line at 32F</span></span>
<span id="cb8-12">    ax.axhline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y ticks</span></span>
<span id="cb8-15">    ax.set_yticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>])</span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y limit</span></span>
<span id="cb8-18">    ax.set_ylim([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>])</span>
<span id="cb8-19"></span>
<span id="cb8-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set x label</span></span>
<span id="cb8-21">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Day of season"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight)</span></code></pre></div>
</section>
<section id="adding-notes" class="level3">
<h3 class="anchored" data-anchor-id="adding-notes">Adding Notes</h3>
<p>Finally, we use Matplotlib’s <code>ax.text()</code> to annotate the source of the data.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb9-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb9-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb9-4">    ...</span>
<span id="cb9-5"></span>
<span id="cb9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Source ------</span></span>
<span id="cb9-7">    ax_notes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]</span>
<span id="cb9-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add source</span></span>
<span id="cb9-9">    ax_notes.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb9-10">    ax_notes.text(</span>
<span id="cb9-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-12">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source: NOAA"</span>,</span>
<span id="cb9-14">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontsize,</span>
<span id="cb9-15">        fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontweight,</span>
<span id="cb9-16">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grey,</span>
<span id="cb9-17">    )</span>
<span id="cb9-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_</span></code></pre></div>
</section>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping Up</h2>
<p>Recreating this figure with Polars turned out to be more involved than I initially expected. However, the process was incredibly rewarding, as it deepened my understanding of Pandas, Polars, and Matplotlib. Switching between Pandas and Polars required a shift in mindset, but it also reinforced key concepts in both libraries. I look forward to exploring more of these challenges in the future.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>pandas</category>
  <category>polars</category>
  <category>matplotlib</category>
  <guid>https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/20250210.html</guid>
  <pubDate>Mon, 10 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/alta_ski_resort.png" medium="image" type="image/png" height="149" width="144"/>
</item>
<item>
  <title>Three Approaches to Styling the Table Body in Great Tables</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/style-table-body/20250124.html</link>
  <description><![CDATA[ 





<p>This post demonstrates three approaches to styling the table body:</p>
<ul>
<li><strong>Using a for-loop:</strong> Repeatedly call <code>GT.tab_style()</code> for each column.</li>
<li><strong>Utilizing the <code>locations=</code> parameter in <code>GT.tab_style()</code>:</strong> Pass a list of <code>loc.body()</code> objects.</li>
<li><strong>Leveraging the <code>mask=</code> parameter in <code>loc.body()</code>:</strong> Use Polars expressions for streamlined styling.</li>
</ul>
<p>Let’s dive in.</p>
<section id="preparations" class="level2">
<h2 class="anchored" data-anchor-id="preparations">Preparations</h2>
<p>We’ll use the built-in dataset <code>gtcars</code> to create a Polars DataFrame. First, we’ll select the columns <code>mfr</code>, <code>drivetrain</code>, <code>year</code>, and <code>hp</code> to create a small pivoted table named <code>df_mini</code>. Then, we’ll pass <code>df_mini</code> to the <code>GT</code> object and use <code>GT.tab_stub()</code>, setting <code>drivetrain</code> as <code>rowname_col=</code> and <code>mfr</code> as <code>groupname_col=</code> to create the table <code>gt</code>, as shown below:</p>
<div id="d54809c4" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT, loc, style</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gtcars</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb1-5"></span>
<span id="cb1-6">year_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2014"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2015"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2016"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2017"</span>]</span>
<span id="cb1-7">df_mini <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-8">    pl.from_pandas(gtcars)</span>
<span id="cb1-9">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>).is_in([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ferrari"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lamborghini"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW"</span>]))</span>
<span id="cb1-10">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>)</span>
<span id="cb1-11">    .pivot(on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>], values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hp"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>)</span>
<span id="cb1-12">    .select([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>year_cols])</span>
<span id="cb1-13">)</span>
<span id="cb1-14"></span>
<span id="cb1-15">gt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GT(df_mini).tab_stub(rowname_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>, groupname_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>).opt_stylize()</span>
<span id="cb1-16">gt</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="1">
<div id="uvnwklrpgs" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#uvnwklrpgs table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#uvnwklrpgs thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#uvnwklrpgs p { margin: 0; padding: 0; }
 #uvnwklrpgs .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #uvnwklrpgs .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #uvnwklrpgs .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #uvnwklrpgs .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #uvnwklrpgs .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #uvnwklrpgs .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #uvnwklrpgs .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #uvnwklrpgs .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #uvnwklrpgs .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #uvnwklrpgs .gt_column_spanner_outer:first-child { padding-left: 0; }
 #uvnwklrpgs .gt_column_spanner_outer:last-child { padding-right: 0; }
 #uvnwklrpgs .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #uvnwklrpgs .gt_spanner_row { border-bottom-style: hidden; }
 #uvnwklrpgs .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #uvnwklrpgs .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #uvnwklrpgs .gt_from_md> :first-child { margin-top: 0; }
 #uvnwklrpgs .gt_from_md> :last-child { margin-bottom: 0; }
 #uvnwklrpgs .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #uvnwklrpgs .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #uvnwklrpgs .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #uvnwklrpgs .gt_row_group_first td { border-top-width: 2px; }
 #uvnwklrpgs .gt_row_group_first th { border-top-width: 2px; }
 #uvnwklrpgs .gt_striped { background-color: #F4F4F4; }
 #uvnwklrpgs .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #uvnwklrpgs .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #uvnwklrpgs .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #uvnwklrpgs .gt_left { text-align: left; }
 #uvnwklrpgs .gt_center { text-align: center; }
 #uvnwklrpgs .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #uvnwklrpgs .gt_font_normal { font-weight: normal; }
 #uvnwklrpgs .gt_font_bold { font-weight: bold; }
 #uvnwklrpgs .gt_font_italic { font-style: italic; }
 #uvnwklrpgs .gt_super { font-size: 65%; }
 #uvnwklrpgs .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #uvnwklrpgs .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td class="gt_row gt_right gt_striped">678.4</td>
    <td class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
<p>The numbers in the cells represent the average horsepower for each combination of <code>mfr</code> and <code>drivetrain</code> for a specific year.</p>
<p>In the following section, we’ll demonstrate three different ways to highlight the cell text in red if the average horsepower exceeds 650.</p>
</section>
<section id="using-a-for-loop-repeatedly-call-gt.tab_style-for-each-column" class="level2">
<h2 class="anchored" data-anchor-id="using-a-for-loop-repeatedly-call-gt.tab_style-for-each-column">Using a For-Loop: Repeatedly Call <code>GT.tab_style()</code> for Each Column</h2>
<p>The most intuitive way is to call <code>GT.tab_style()</code> for each column. Here’s how:</p>
<div id="4c9aafd2" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-2-1" class="code-annotation-target">gt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt</span>
<span id="annotated-cell-2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> year_cols:</span>
<span id="annotated-cell-2-3">    gt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt1.tab_style(</span>
<span id="annotated-cell-2-4">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="annotated-cell-2-5">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col, rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(col).gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="annotated-cell-2-6">    )</span>
<span id="annotated-cell-2-7">gt1</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="1" data-code-annotation="1">Since we want to keep <code>gt</code> intact for later use, we will modify <code>gt1</code> in this approach instead.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div id="pkgwouwvxw" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#pkgwouwvxw table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#pkgwouwvxw thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#pkgwouwvxw p { margin: 0; padding: 0; }
 #pkgwouwvxw .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #pkgwouwvxw .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #pkgwouwvxw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #pkgwouwvxw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #pkgwouwvxw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #pkgwouwvxw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #pkgwouwvxw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #pkgwouwvxw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #pkgwouwvxw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #pkgwouwvxw .gt_column_spanner_outer:first-child { padding-left: 0; }
 #pkgwouwvxw .gt_column_spanner_outer:last-child { padding-right: 0; }
 #pkgwouwvxw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #pkgwouwvxw .gt_spanner_row { border-bottom-style: hidden; }
 #pkgwouwvxw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #pkgwouwvxw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #pkgwouwvxw .gt_from_md> :first-child { margin-top: 0; }
 #pkgwouwvxw .gt_from_md> :last-child { margin-bottom: 0; }
 #pkgwouwvxw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #pkgwouwvxw .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #pkgwouwvxw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #pkgwouwvxw .gt_row_group_first td { border-top-width: 2px; }
 #pkgwouwvxw .gt_row_group_first th { border-top-width: 2px; }
 #pkgwouwvxw .gt_striped { background-color: #F4F4F4; }
 #pkgwouwvxw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #pkgwouwvxw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #pkgwouwvxw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #pkgwouwvxw .gt_left { text-align: left; }
 #pkgwouwvxw .gt_center { text-align: center; }
 #pkgwouwvxw .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #pkgwouwvxw .gt_font_normal { font-weight: normal; }
 #pkgwouwvxw .gt_font_bold { font-weight: bold; }
 #pkgwouwvxw .gt_font_italic { font-style: italic; }
 #pkgwouwvxw .gt_super { font-size: 65%; }
 #pkgwouwvxw .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #pkgwouwvxw .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
</section>
<section id="utilizing-the-locations-parameter-in-gt.tab_style-pass-a-list-of-loc.body-objects" class="level2">
<h2 class="anchored" data-anchor-id="utilizing-the-locations-parameter-in-gt.tab_style-pass-a-list-of-loc.body-objects">Utilizing the <code>locations=</code> Parameter in <code>GT.tab_style()</code>: Pass a List of <code>loc.body()</code> Objects</h2>
<p>A more concise method is to pass a list of <code>loc.body()</code> objects to the <code>locations=</code> parameter in <code>GT.tab_style()</code>, as shown below:</p>
<div id="c8292428" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">(</span>
<span id="cb2-2">    gt.tab_style(</span>
<span id="cb2-3">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="cb2-4">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb2-5">            loc.body(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col, rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(col).gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="cb2-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> year_cols</span>
<span id="cb2-7">        ],</span>
<span id="cb2-8">    )</span>
<span id="cb2-9">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div id="vjitflrgfn" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#vjitflrgfn table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#vjitflrgfn thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#vjitflrgfn p { margin: 0; padding: 0; }
 #vjitflrgfn .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #vjitflrgfn .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #vjitflrgfn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #vjitflrgfn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #vjitflrgfn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #vjitflrgfn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #vjitflrgfn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #vjitflrgfn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #vjitflrgfn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #vjitflrgfn .gt_column_spanner_outer:first-child { padding-left: 0; }
 #vjitflrgfn .gt_column_spanner_outer:last-child { padding-right: 0; }
 #vjitflrgfn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #vjitflrgfn .gt_spanner_row { border-bottom-style: hidden; }
 #vjitflrgfn .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #vjitflrgfn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #vjitflrgfn .gt_from_md> :first-child { margin-top: 0; }
 #vjitflrgfn .gt_from_md> :last-child { margin-bottom: 0; }
 #vjitflrgfn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #vjitflrgfn .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #vjitflrgfn .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #vjitflrgfn .gt_row_group_first td { border-top-width: 2px; }
 #vjitflrgfn .gt_row_group_first th { border-top-width: 2px; }
 #vjitflrgfn .gt_striped { background-color: #F4F4F4; }
 #vjitflrgfn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #vjitflrgfn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #vjitflrgfn .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #vjitflrgfn .gt_left { text-align: left; }
 #vjitflrgfn .gt_center { text-align: center; }
 #vjitflrgfn .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #vjitflrgfn .gt_font_normal { font-weight: normal; }
 #vjitflrgfn .gt_font_bold { font-weight: bold; }
 #vjitflrgfn .gt_font_italic { font-style: italic; }
 #vjitflrgfn .gt_super { font-size: 65%; }
 #vjitflrgfn .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #vjitflrgfn .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
</section>
<section id="leveraging-the-mask-parameter-in-loc.body-use-polars-expressions-for-streamlined-styling" class="level2">
<h2 class="anchored" data-anchor-id="leveraging-the-mask-parameter-in-loc.body-use-polars-expressions-for-streamlined-styling">Leveraging the <code>mask=</code> Parameter in <code>loc.body()</code>: Use Polars Expressions for Streamlined Styling</h2>
<p>The most modern approach (<code>0.16.0</code>) is to pass a Polars expression to the <code>mask=</code> parameter in <code>loc.body()</code>, as illustrated here:</p>
<div id="92b440aa" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">(</span>
<span id="cb3-2">    gt.tab_style(</span>
<span id="cb3-3">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="cb3-4">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cs.numeric().gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="cb3-5">    )</span>
<span id="cb3-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div id="xffxpikpbf" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#xffxpikpbf table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#xffxpikpbf thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#xffxpikpbf p { margin: 0; padding: 0; }
 #xffxpikpbf .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #xffxpikpbf .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #xffxpikpbf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #xffxpikpbf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #xffxpikpbf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xffxpikpbf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #xffxpikpbf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xffxpikpbf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #xffxpikpbf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #xffxpikpbf .gt_column_spanner_outer:first-child { padding-left: 0; }
 #xffxpikpbf .gt_column_spanner_outer:last-child { padding-right: 0; }
 #xffxpikpbf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #xffxpikpbf .gt_spanner_row { border-bottom-style: hidden; }
 #xffxpikpbf .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #xffxpikpbf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #xffxpikpbf .gt_from_md> :first-child { margin-top: 0; }
 #xffxpikpbf .gt_from_md> :last-child { margin-bottom: 0; }
 #xffxpikpbf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #xffxpikpbf .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #xffxpikpbf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #xffxpikpbf .gt_row_group_first td { border-top-width: 2px; }
 #xffxpikpbf .gt_row_group_first th { border-top-width: 2px; }
 #xffxpikpbf .gt_striped { background-color: #F4F4F4; }
 #xffxpikpbf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #xffxpikpbf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #xffxpikpbf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #xffxpikpbf .gt_left { text-align: left; }
 #xffxpikpbf .gt_center { text-align: center; }
 #xffxpikpbf .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #xffxpikpbf .gt_font_normal { font-weight: normal; }
 #xffxpikpbf .gt_font_bold { font-weight: bold; }
 #xffxpikpbf .gt_font_italic { font-style: italic; }
 #xffxpikpbf .gt_super { font-size: 65%; }
 #xffxpikpbf .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #xffxpikpbf .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
<p>In this example, <code>loc.body()</code> is smart enough to automatically target the rows where the cell value exceeds 650 for each numerical column. In general, you can think of <code>mask=</code> as a syntactic sugar that Great Tables provides to save you from having to manually loop through the columns.</p>
</section>
<section id="final-words" class="level2">
<h2 class="anchored" data-anchor-id="final-words">Final Words</h2>
<p>This post summarizes three approaches to styling the table body. Among them, the <code>mask=</code> parameter in <code>loc.body()</code> is definitely my favorite, inspired by <a href="https://github.com/posit-dev/great-tables/issues/389">#389</a> and implemented by me.</p>
<p>Special thanks to <a href="https://github.com/rich-iannone"><span class="citation" data-cites="rich-iannone">@rich-iannone</span></a> and <a href="https://github.com/machow"><span class="citation" data-cites="machow">@machow</span></a> for their invaluable suggestions during development. Any remaining bugs are entirely on me.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>polars</category>
  <category>gt</category>
  <guid>https://tech.ycwu.space/posts/style-table-body/20250124.html</guid>
  <pubDate>Fri, 24 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/style-table-body/table_body.png" medium="image" type="image/png" height="210" width="144"/>
</item>
<item>
  <title>Exploring Resend SMTP Service with Django</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/django-allauth-resend/20241223.html</link>
  <description><![CDATA[ 





<p>This post demonstrates how to integrate <a href="https://resend.com/">Resend</a> with <a href="https://docs.allauth.org/en/latest/">django-allauth</a> seamlessly in a <code>Django</code> project. If you’re looking to use <code>Resend</code> for sending emails via <code>Django</code>, refer to the <a href="https://github.com/resend/resend-django-smtp-example">repo</a> provided by <code>Resend</code>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The code featured in this post is available in this <a href="https://github.com/jrycw/django-allauth-resend-demo/">repo</a>.</p>
</div>
</div>
<section id="preparations-for-django" class="level2">
<h2 class="anchored" data-anchor-id="preparations-for-django">Preparations for Django</h2>
<section id="create-a-virtual-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-virtual-environment">Create a Virtual Environment</h3>
<p>Start by creating a virtual environment using <a href="https://github.com/astral-sh/uv">uv</a> and activating it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> venv venv</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> venv/bin/activate</span></code></pre></div>
</section>
<section id="install-required-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-required-packages">Install Required Packages</h3>
<p>Create a <code>requirements.txt</code> file and add the necessary dependencies:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">django</span>
<span id="cb2-2">environs[django]</span>
<span id="cb2-3">django<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>allauth</span></code></pre></div>
<p>Install the packages via <code>uv</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
</section>
<section id="set-up-a-django-project" class="level3">
<h3 class="anchored" data-anchor-id="set-up-a-django-project">Set Up a Django Project</h3>
<p>Use the <code>django-admin</code> command to create a project named <code>core</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">django-admin</span> startproject core .</span></code></pre></div>
</section>
<section id="configure-environment-variables" class="level3">
<h3 class="anchored" data-anchor-id="configure-environment-variables">Configure Environment Variables</h3>
<p>Create a <code>.env</code> file with the following content:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">DEFAULT_FROM_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb5-2">RESEND_SMTP_HOST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>smtp.resend.com</span>
<span id="cb5-3">RESEND_SMTP_USERNAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>resend</span>
<span id="cb5-4">RESEND_API_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb5-5">RESEND_SMTP_PORT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span></span>
<span id="cb5-6">RESEND_USE_TLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
<p>The next sections explain how to obtain <code>DEFAULT_FROM_EMAIL</code> and <code>RESEND_API_KEY</code>.</p>
<hr>
</section>
</section>
<section id="preparations-for-resend" class="level2">
<h2 class="anchored" data-anchor-id="preparations-for-resend">Preparations for Resend</h2>
<section id="verify-your-domain" class="level3">
<h3 class="anchored" data-anchor-id="verify-your-domain">Verify Your Domain</h3>
<p>Follow the <a href="https://resend.com/docs/dashboard/domains/introduction">Resend documentation</a> to verify your domain. Once verified, you can send emails using an address like <code>user@send.yourdomain.com</code>.</p>
<ul>
<li>You control the prefix before <code>@</code>, as ownership of the domain has been confirmed.<br>
</li>
<li>Add your chosen email to <code>DEFAULT_FROM_EMAIL</code> in the <code>.env</code> file.</li>
</ul>
</section>
<section id="obtain-an-api-key" class="level3">
<h3 class="anchored" data-anchor-id="obtain-an-api-key">Obtain an API Key</h3>
<p>Generate an API key via the <a href="https://resend.com/api-keys">Resend API Keys page</a> and add it to the <code>RESEND_API_KEY</code> field in your <code>.env</code> file.</p>
</section>
</section>
<section id="django-scaffold" class="level2">
<h2 class="anchored" data-anchor-id="django-scaffold">Django Scaffold</h2>
<p>Follow the <a href="https://docs.allauth.org/en/latest/installation/quickstart.html">quick start guide</a> from <code>django-allauth</code> to configure the project with minimal setup.</p>
<section id="modify-coreurls.py" class="level3">
<h3 class="anchored" data-anchor-id="modify-coreurls.py">Modify <code>core/urls.py</code></h3>
<p>Include <code>django-allauth</code> routes and define a homepage route:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/urls.py</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.contrib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> admin</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.urls <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> path, include</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> . <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> views</span>
<span id="cb6-6"></span>
<span id="cb6-7">urlpatterns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-8">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"admin/"</span>, admin.site.urls),</span>
<span id="cb6-9">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accounts/"</span>, include(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.urls"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb6-10">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, views.index, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb6-11">]</span></code></pre></div>
</section>
<section id="add-coreviews.py" class="level3">
<h3 class="anchored" data-anchor-id="add-coreviews.py">Add <code>core/views.py</code></h3>
<p>Define the homepage with a link to the signup URL provided by <code>django-allauth</code>:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.http <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HttpResponse</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.urls <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> reverse</span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> index(request):</span>
<span id="cb7-6">    signup_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reverse(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"account_signup"</span>)</span>
<span id="cb7-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> HttpResponse(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;a href="</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>signup_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;Hello, please Sign Up here!&lt;/a&gt;'</span>)</span></code></pre></div>
</section>
<section id="modify-coresettings.py" class="level3">
<h3 class="anchored" data-anchor-id="modify-coresettings.py">Modify <code>core/settings.py</code></h3>
<section id="read-environment-variables" class="level4">
<h4 class="anchored" data-anchor-id="read-environment-variables">Read Environment Variables</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> environs <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Env</span>
<span id="cb8-4"></span>
<span id="cb8-5">env <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Env()</span>
<span id="cb8-6">env.read_env()</span></code></pre></div>
</section>
<section id="update-installed_apps" class="level4">
<h4 class="anchored" data-anchor-id="update-installed_apps">Update INSTALLED_APPS</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">INSTALLED_APPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb9-4">    ...</span>
<span id="cb9-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb9-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb9-7">]</span></code></pre></div>
</section>
<section id="update-middleware" class="level4">
<h4 class="anchored" data-anchor-id="update-middleware">Update MIDDLEWARE</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb10-2"></span>
<span id="cb10-3">MIDDLEWARE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb10-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.security.SecurityMiddleware"</span>,</span>
<span id="cb10-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.sessions.middleware.SessionMiddleware"</span>,</span>
<span id="cb10-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.common.CommonMiddleware"</span>,</span>
<span id="cb10-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.csrf.CsrfViewMiddleware"</span>,</span>
<span id="cb10-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.auth.middleware.AuthenticationMiddleware"</span>,</span>
<span id="cb10-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.messages.middleware.MessageMiddleware"</span>,</span>
<span id="cb10-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account.middleware.AccountMiddleware"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb10-11">    ...</span>
<span id="cb10-12">]</span></code></pre></div>
</section>
<section id="configure-email-backend-and-authentication-backends" class="level4">
<h4 class="anchored" data-anchor-id="configure-email-backend-and-authentication-backends">Configure Email Backend and Authentication Backends</h4>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">EMAIL_BACKEND <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.core.mail.backends.smtp.EmailBackend"</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">AUTHENTICATION_BACKENDS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb11-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.auth.backends.ModelBackend"</span>,</span>
<span id="cb11-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account.auth_backends.AuthenticationBackend"</span>,</span>
<span id="cb11-8">]</span></code></pre></div>
</section>
<section id="define-login-and-logout-redirect-urls" class="level4">
<h4 class="anchored" data-anchor-id="define-login-and-logout-redirect-urls">Define Login and Logout Redirect URLs</h4>
<p>Here, we define only <code>ACCOUNT_LOGOUT_REDIRECT_URL</code> because <code>django-allauth</code> overwrites <code>LOGOUT_REDIRECT_URL</code>.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">LOGIN_REDIRECT_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span></span>
<span id="cb12-2">ACCOUNT_LOGOUT_REDIRECT_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span></span></code></pre></div>
</section>
<section id="optional-preference-settings" class="level4">
<h4 class="anchored" data-anchor-id="optional-preference-settings">Optional Preference Settings</h4>
<p>Opinionated configurations for a simplified signup and email-based login:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-2">ACCOUNT_USERNAME_REQUIRED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-3">ACCOUNT_AUTHENTICATION_METHOD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span></span>
<span id="cb13-4">ACCOUNT_EMAIL_REQUIRED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb13-5">ACCOUNT_UNIQUE_EMAIL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</section>
<section id="define-resend-variables" class="level4">
<h4 class="anchored" data-anchor-id="define-resend-variables">Define Resend Variables</h4>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">DEFAULT_FROM_EMAIL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEFAULT_FROM_EMAIL"</span>)</span>
<span id="cb14-2">RESEND_SMTP_HOST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_HOST"</span>)</span>
<span id="cb14-3">RESEND_SMTP_USERNAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_USERNAME"</span>)</span>
<span id="cb14-4">RESEND_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_API_KEY"</span>)</span>
<span id="cb14-5">RESEND_SMTP_PORT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_PORT"</span>)</span>
<span id="cb14-6">RESEND_USE_TLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_USE_TLS"</span>)</span></code></pre></div>
</section>
<section id="map-resend-variables-to-django-email-variables" class="level4">
<h4 class="anchored" data-anchor-id="map-resend-variables-to-django-email-variables">Map Resend Variables to Django Email Variables</h4>
<p>Delegate <code>Django</code> email settings to <code>Resend</code> environment variables:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">EMAIL_HOST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_HOST</span>
<span id="cb15-2">EMAIL_HOST_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_USERNAME</span>
<span id="cb15-3">EMAIL_HOST_PASSWORD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_API_KEY</span>
<span id="cb15-4">EMAIL_PORT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_PORT</span>
<span id="cb15-5">EMAIL_USE_TLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_USE_TLS</span></code></pre></div>
</section>
</section>
</section>
<section id="tryout" class="level2">
<h2 class="anchored" data-anchor-id="tryout">Tryout</h2>
<p>Migrate the database and run the development server with the following commands:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> manage.py migrate</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> manage.py runserver</span></code></pre></div>
<p>Now, go to <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a> and click the sign-up link. You should see the signup page. After submitting the form, you will be redirected to the homepage.</p>
<p>Next, check your inbox for an email with the subject <code>[127.0.0.1:8000] Please Confirm Your Email Address</code>.</p>
<p>The email will contain a confirmation link. Click the link, then click the confirmation button, and you’re all set for user registration!</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you encounter issues during configuration, the <a href="https://resend.com/logs">Resend logs</a> can be a helpful resource, as they provide the request body, response body, and status code. <img src="https://tech.ycwu.space/posts/django-allauth-resend/resend_logs.png" class="img-fluid" alt="resend_logs.png"></p>
</div>
</div>
</section>
<section id="final-words" class="level2">
<h2 class="anchored" data-anchor-id="final-words">Final Words</h2>
<p>The configuration is straightforward, and it’s great that <code>Resend</code> offers SMTP services. The modern dashboard operates smoothly, and the well-documented resources make it easy for developers to find needed information. So far, the user experience has been positive, and I look forward to using it in real projects.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>django</category>
  <category>resend</category>
  <guid>https://tech.ycwu.space/posts/django-allauth-resend/20241223.html</guid>
  <pubDate>Mon, 23 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/django-allauth-resend/resend_logs.png" medium="image" type="image/png" height="55" width="144"/>
</item>
</channel>
</rss>
