<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Tech&#39;n&#39;Take</title>
<link>https://tech.ycwu.space/</link>
<atom:link href="https://tech.ycwu.space/index.xml" rel="self" type="application/rss+xml"/>
<description>This is Jerry Wu&#39;s Tech&#39;n&#39;take.</description>
<generator>quarto-1.6.43</generator>
<lastBuildDate>Thu, 03 Apr 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Clone the Reciprocal Tariffs Table Using Great Tables</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/clone-reciprocal-tariffs-table/20250403.html</link>
  <description><![CDATA[ 





<p>This post demonstrates how to clone the Reciprocal Tariffs table that President Donald Trump announced on April 2 on <a href="https://truthsocial.com/@realDonaldTrump/114270398531479278">Truth Social</a>.</p>
<p>Since the code is largely self-explanatory, I will highlight some tricks and caveats I encountered while building the table:</p>
<ol type="1">
<li>The <code>reciprocal_tariffs</code> dictionary was extracted with the help of AI.</li>
<li>The border radius was one of the trickiest aspects of the table—it took some time to figure out how to fill the gap between the rounded corners and the rectangle. Fortunately, I drew inspiration from the Great Tables example, <a href="https://posit-dev.github.io/great-tables/examples/">Highest Paid Athletes in 2023</a>. The solution was to use two <code>&lt;div&gt;</code> tags, which allowed me to assign distinct colors to the inside and outside of the border.</li>
<li>I created four empty columns—<code>["0", "1", "2", "3"]</code>—to serve as borders. This allowed for easier adjustment of border properties such as color and width. An interesting feature of <a href="https://posit-dev.github.io/great-tables/reference/GT.cols_width.html#great_tables.GT.cols_width">GT.cols_width()</a> is that you can set column widths using percentages, and the total doesn’t need to add up to exactly 100%—it just works. This is especially handy when experimenting with different table designs, as it lets you estimate widths without worrying about precise calculations.</li>
<li>I added a “mod” column to help distinguish whether a row’s index is odd or even. This made it possible to combine <a href="https://docs.pola.rs/api/python/stable/reference/expressions/api/polars.when.html">pl.when().then().otherwise()</a> with <a href="https://docs.pola.rs/api/python/stable/reference/expressions/api/polars.Expr.map_elements.html">pl.Expr.map_elements()</a>. Although <code>pl.Expr.map_elements()</code> is generally considered an anti-pattern in Polars, I believe it fits my use case well.</li>
<li>The <code>column_labels_border_bottom_style=</code> parameter in <a href="https://posit-dev.github.io/great-tables/reference/GT.tab_options.html#great_tables.GT.tab_options">GT.tab_options()</a> is key to hiding the line between the column labels and the table body.</li>
<li>Logo embedding might seem a bit tricky if you’re new to Great Tables; I suggest reading the <a href="https://posit-dev.github.io/great-tables/blog/rendering-images/">blog post</a> that details how to render images anywhere in Great Tables.</li>
<li>To enhance the overall visual effect, I added a row at the end of the table and filled it with the same background color.</li>
<li>The original table featured two rings, but I was only able to implement the inner one. Ultimately, I chose to present the table without it. If you’re interested in how I implemented the ring, the code is available in the comments below.</li>
<li>While the color codes and font properties could be further enhanced, Great Tables successfully replicates the table’s structure and style with only minor differences.</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://tech.ycwu.space/posts/clone-reciprocal-tariffs-table/reciprocal_tariffs_gt.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Cloned Reciprocal Tariffs Table"></p>
</figure>
</div>
<div id="fe633bf9" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Show full code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT, google_font, html, loc, style, vals</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># source1: https://truthsocial.com/@realDonaldTrump/114270398531479278</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># source2:</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "https://upload.wikimedia.org/wikipedia/commons/</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># thumb/3/36/Seal_of_the_President_of_the_United_States.svg/</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 800px-Seal_of_the_President_of_the_United_States.svg.png"</span></span>
<span id="cb1-9">logo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vals.fmt_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logo.png"</span>, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-10"></span>
<span id="cb1-11">reciprocal_tariffs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>: [</span>
<span id="cb1-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"China"</span>,</span>
<span id="cb1-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"European Union"</span>,</span>
<span id="cb1-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vietnam"</span>,</span>
<span id="cb1-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Taiwan"</span>,</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Japan"</span>,</span>
<span id="cb1-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span>,</span>
<span id="cb1-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Korea"</span>,</span>
<span id="cb1-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Thailand"</span>,</span>
<span id="cb1-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Switzerland"</span>,</span>
<span id="cb1-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Indonesia"</span>,</span>
<span id="cb1-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Malaysia"</span>,</span>
<span id="cb1-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cambodia"</span>,</span>
<span id="cb1-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"United Kingdom"</span>,</span>
<span id="cb1-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Africa"</span>,</span>
<span id="cb1-27">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brazil"</span>,</span>
<span id="cb1-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bangladesh"</span>,</span>
<span id="cb1-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Singapore"</span>,</span>
<span id="cb1-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Israel"</span>,</span>
<span id="cb1-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Philippines"</span>,</span>
<span id="cb1-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chile"</span>,</span>
<span id="cb1-33">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Australia"</span>,</span>
<span id="cb1-34">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pakistan"</span>,</span>
<span id="cb1-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Turkey"</span>,</span>
<span id="cb1-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sri Lanka"</span>,</span>
<span id="cb1-37">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Colombia"</span>,</span>
<span id="cb1-38">    ],</span>
<span id="cb1-39">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>: [</span>
<span id="cb1-40">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"67%"</span>,</span>
<span id="cb1-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"39%"</span>,</span>
<span id="cb1-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"90%"</span>,</span>
<span id="cb1-43">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"64%"</span>,</span>
<span id="cb1-44">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"46%"</span>,</span>
<span id="cb1-45">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"52%"</span>,</span>
<span id="cb1-46">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"50%"</span>,</span>
<span id="cb1-47">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"72%"</span>,</span>
<span id="cb1-48">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"61%"</span>,</span>
<span id="cb1-49">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"64%"</span>,</span>
<span id="cb1-50">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"47%"</span>,</span>
<span id="cb1-51">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"97%"</span>,</span>
<span id="cb1-52">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-53">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"60%"</span>,</span>
<span id="cb1-54">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-55">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"74%"</span>,</span>
<span id="cb1-56">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-57">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"33%"</span>,</span>
<span id="cb1-58">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"34%"</span>,</span>
<span id="cb1-59">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-60">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-61">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"58%"</span>,</span>
<span id="cb1-62">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-63">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"88%"</span>,</span>
<span id="cb1-64">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-65">    ],</span>
<span id="cb1-66">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>: [</span>
<span id="cb1-67">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"34%"</span>,</span>
<span id="cb1-68">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>,</span>
<span id="cb1-69">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"46%"</span>,</span>
<span id="cb1-70">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"32%"</span>,</span>
<span id="cb1-71">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"24%"</span>,</span>
<span id="cb1-72">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"26%"</span>,</span>
<span id="cb1-73">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"25%"</span>,</span>
<span id="cb1-74">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"36%"</span>,</span>
<span id="cb1-75">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"31%"</span>,</span>
<span id="cb1-76">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"32%"</span>,</span>
<span id="cb1-77">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"24%"</span>,</span>
<span id="cb1-78">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"49%"</span>,</span>
<span id="cb1-79">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-80">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30%"</span>,</span>
<span id="cb1-81">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-82">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"37%"</span>,</span>
<span id="cb1-83">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-84">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17%"</span>,</span>
<span id="cb1-85">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"17%"</span>,</span>
<span id="cb1-86">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-87">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-88">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"29%"</span>,</span>
<span id="cb1-89">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-90">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"44%"</span>,</span>
<span id="cb1-91">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10%"</span>,</span>
<span id="cb1-92">    ],</span>
<span id="cb1-93">}</span>
<span id="cb1-94"></span>
<span id="cb1-95">dark_navy_blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0B162A"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># background</span></span>
<span id="cb1-96">light_blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B5D3E7"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row</span></span>
<span id="cb1-97">white <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFFFFF"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row</span></span>
<span id="cb1-98">yellow <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F6D588"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "reciprocal_tariffs" column</span></span>
<span id="cb1-99">gold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFF8DE"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logo</span></span>
<span id="cb1-100"></span>
<span id="cb1-101"></span>
<span id="cb1-102"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> change_border_radius(</span>
<span id="cb1-103">    x, border_radius: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, background_color1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, background_color2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span></span>
<span id="cb1-104">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb1-105">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-106"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;div style="background-color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>background_color1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">;border: None"&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-107"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;div style="border-radius: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>border_radius<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-108"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                    background-color:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>background_color2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">;"&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-109"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            &amp;nbsp;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-110"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        &lt;/div&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-111"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    &lt;/div&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-112"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-113"></span>
<span id="cb1-114"></span>
<span id="cb1-115"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> change_border_radius_expr(</span>
<span id="cb1-116">    cols: pl.Expr,</span>
<span id="cb1-117">    return_dtype: pl.DataType,</span>
<span id="cb1-118">    border_radius: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>,</span>
<span id="cb1-119">    background_color1: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb1-120">    background_color2: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb1-121">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.Expr:</span>
<span id="cb1-122">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cols.map_elements(</span>
<span id="cb1-123">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: change_border_radius(</span>
<span id="cb1-124">            x, border_radius, background_color1, background_color2</span>
<span id="cb1-125">        ),</span>
<span id="cb1-126">        return_dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>return_dtype,</span>
<span id="cb1-127">    )</span>
<span id="cb1-128"></span>
<span id="cb1-129"></span>
<span id="cb1-130">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-131">    pl.DataFrame(reciprocal_tariffs)</span>
<span id="cb1-132">    .with_row_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mod"</span>)</span>
<span id="cb1-133">    .with_columns(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mod"</span>).mod(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>).alias(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i)) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)])</span>
<span id="cb1-134">    .with_columns(</span>
<span id="cb1-135">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "country" and "tariffs_charged" columns</span></span>
<span id="cb1-136">        pl.when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mod"</span>).eq(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-137">        .then(</span>
<span id="cb1-138">            change_border_radius_expr(</span>
<span id="cb1-139">                pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>),</span>
<span id="cb1-140">                pl.String,</span>
<span id="cb1-141">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5px"</span>,</span>
<span id="cb1-142">                dark_navy_blue,</span>
<span id="cb1-143">                light_blue,</span>
<span id="cb1-144">            )</span>
<span id="cb1-145">        )</span>
<span id="cb1-146">        .otherwise(</span>
<span id="cb1-147">            change_border_radius_expr(</span>
<span id="cb1-148">                pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>),</span>
<span id="cb1-149">                pl.String,</span>
<span id="cb1-150">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5px"</span>,</span>
<span id="cb1-151">                dark_navy_blue,</span>
<span id="cb1-152">                white,</span>
<span id="cb1-153">            )</span>
<span id="cb1-154">        ),</span>
<span id="cb1-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "reciprocal_tariffs" column</span></span>
<span id="cb1-156">        change_border_radius_expr(</span>
<span id="cb1-157">            pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>), pl.String, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5px"</span>, dark_navy_blue, yellow</span>
<span id="cb1-158">        ),</span>
<span id="cb1-159">    )</span>
<span id="cb1-160">    .select([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>])</span>
<span id="cb1-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a row at the end of the table</span></span>
<span id="cb1-162">    .pipe(</span>
<span id="cb1-163">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> df_: pl.concat(</span>
<span id="cb1-164">            [df_, pl.DataFrame({col: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_.columns})], how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vertical"</span></span>
<span id="cb1-165">        )</span>
<span id="cb1-166">    )</span>
<span id="cb1-167">)</span>
<span id="cb1-168"></span>
<span id="cb1-169"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inner_ring_color, inner_ring_style, inner_ring_weight = "orange", "dashed", "3px"</span></span>
<span id="cb1-170"></span>
<span id="cb1-171">(</span>
<span id="cb1-172">    GT(df)</span>
<span id="cb1-173">    .cols_align(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>])</span>
<span id="cb1-174">    .cols_label(</span>
<span id="cb1-175">        {</span>
<span id="cb1-176">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>: html(</span>
<span id="cb1-177">                <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-178"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;br&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-179"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;div style="text-align: left;"&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-180"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                    </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>logo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;nbsp;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-181"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                    &lt;span style="color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gold<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">; font-size: 40px;"&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-182"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                        &amp;nbsp&amp;nbsp;Reciprocal Tariffs</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-183"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                    &lt;/span&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-184"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;/div&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-185"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;br&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-186"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;b&gt;Country&lt;/b&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-187"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                """</span></span>
<span id="cb1-188">            ),</span>
<span id="cb1-189">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>: html(</span>
<span id="cb1-190">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-191"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;b&gt;Tariffs Charged&lt;br&gt;to the U.S.A.&lt;/b&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-192"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;br&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-193"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;span style="font-size: 12px;"&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-194"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                    Including&lt;br&gt;Currency Manipulation&lt;br&gt;and Trade Barriers</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-195"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                &lt;/span&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-196"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                """</span></span>
<span id="cb1-197">            ),</span>
<span id="cb1-198">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>: html(</span>
<span id="cb1-199">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;b&gt;U.S.A. Discounted&lt;br&gt;Reciprocal Tariffs&lt;/b&gt;"</span></span>
<span id="cb1-200">            ),</span>
<span id="cb1-201">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-202">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-203">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-204">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb1-205">        }</span>
<span id="cb1-206">    )</span>
<span id="cb1-207">    .cols_width(</span>
<span id="cb1-208">        {</span>
<span id="cb1-209">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"country"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"50%"</span>,</span>
<span id="cb1-210">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3%"</span>,</span>
<span id="cb1-211">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7%"</span>,</span>
<span id="cb1-212">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7%"</span>,</span>
<span id="cb1-213">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3%"</span>,</span>
<span id="cb1-214">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tariffs_charged"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18%"</span>,</span>
<span id="cb1-215">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reciprocal_tariffs"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"18%"</span>,</span>
<span id="cb1-216">        }</span>
<span id="cb1-217">    )</span>
<span id="cb1-218">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the background color of the labels and body to `dark_navy_blue`</span></span>
<span id="cb1-219">    .tab_style(</span>
<span id="cb1-220">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dark_navy_blue),</span>
<span id="cb1-221">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[loc.column_labels(), loc.body()],</span>
<span id="cb1-222">    )</span>
<span id="cb1-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the border color of the body to `dark_navy_blue`</span></span>
<span id="cb1-224">    .tab_style(</span>
<span id="cb1-225">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.borders(sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dark_navy_blue),</span>
<span id="cb1-226">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(),</span>
<span id="cb1-227">    )</span>
<span id="cb1-228">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the font for the body text</span></span>
<span id="cb1-229">    .tab_style(</span>
<span id="cb1-230">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(</span>
<span id="cb1-231">            font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>google_font(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Trajan Pro"</span>), weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xx-large"</span></span>
<span id="cb1-232">        ),</span>
<span id="cb1-233">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(),</span>
<span id="cb1-234">    )</span>
<span id="cb1-235">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the font for the labels</span></span>
<span id="cb1-236">    .tab_style(</span>
<span id="cb1-237">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>google_font(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Georgia"</span>), weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"large"</span>),</span>
<span id="cb1-238">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.column_labels(),</span>
<span id="cb1-239">    )</span>
<span id="cb1-240">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the text color of the labels to `white`</span></span>
<span id="cb1-241">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>white), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.column_labels())</span>
<span id="cb1-242">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># center-align the labels</span></span>
<span id="cb1-243">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.css(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-align: center;"</span>), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.column_labels())</span>
<span id="cb1-244">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hide the bottom line of the label section</span></span>
<span id="cb1-245">    .tab_options(column_labels_border_bottom_style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hidden"</span>)</span>
<span id="cb1-246">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the body background color to `dark_navy_blue` for the last row</span></span>
<span id="cb1-247">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dark_navy_blue), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb1-248">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># need to adjust `window_size` to obtain a higher-quality figure</span></span>
<span id="cb1-249">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .save("reciprocal_tariffs_gt.png", web_driver="firefox", window_size=(1200, 1000))</span></span>
<span id="cb1-250">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb1-251">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># =========================</span></span>
<span id="cb1-252">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># inner ring</span></span>
<span id="cb1-253">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># =========================</span></span>
<span id="cb1-254">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb1-255">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-256">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-257">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="bottom",</span></span>
<span id="cb1-258">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-259">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-260">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-261">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-262">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.body(rows=[-1]),</span></span>
<span id="cb1-263">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-264">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-265">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-266">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="left",</span></span>
<span id="cb1-267">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-268">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-269">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-270">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-271">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.body(columns=["0"]),</span></span>
<span id="cb1-272">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-273">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-274">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-275">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="right",</span></span>
<span id="cb1-276">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-277">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-278">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-279">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-280">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.body(columns=["3"]),</span></span>
<span id="cb1-281">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-282">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-283">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-284">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="top",</span></span>
<span id="cb1-285">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-286">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-287">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-288">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-289">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.column_labels(),</span></span>
<span id="cb1-290">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-291">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-292">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-293">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="left",</span></span>
<span id="cb1-294">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-295">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-296">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-297">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-298">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.column_labels(columns=["0"]),</span></span>
<span id="cb1-299">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-300">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .tab_style(</span></span>
<span id="cb1-301">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     style=style.borders(</span></span>
<span id="cb1-302">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         sides="right",</span></span>
<span id="cb1-303">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         color=inner_ring_color,</span></span>
<span id="cb1-304">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         style=inner_ring_style,</span></span>
<span id="cb1-305">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#         weight=inner_ring_weight,</span></span>
<span id="cb1-306">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ),</span></span>
<span id="cb1-307">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     locations=loc.column_labels(columns=["3"]),</span></span>
<span id="cb1-308">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># )</span></span>
<span id="cb1-309">)</span></code></pre></div>
</details>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>This table is intended as a self-practice project, and the data in the table may not be 100% accurate. Please refer to the <a href="https://truthsocial.com/@realDonaldTrump/114270398531479278">original source</a> if you require verified data.</li>
<li>This post was drafted by me, with AI assistance to refine the content.</li>
</ol>
</div>
</div>



 ]]></description>
  <category>python</category>
  <category>polars</category>
  <category>gt</category>
  <guid>https://tech.ycwu.space/posts/clone-reciprocal-tariffs-table/20250403.html</guid>
  <pubDate>Thu, 03 Apr 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/clone-reciprocal-tariffs-table/reciprocal_tariffs_gt.png" medium="image" type="image/png" height="193" width="144"/>
</item>
<item>
  <title>Applying Custom Color Palettes to the Table Body in Great Tables</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/table-body-custom-palette/20250225.html</link>
  <description><![CDATA[ 





<p>This post provides a concise guide on styling the table body with custom colors using Pandas and Polars.</p>
<p>There are two primary methods for applying a color palette: one leverages a pre-existing column containing color values, while the other determines colors dynamically based on conditions. I’ll walk you through both approaches.</p>
<p>Since all the generated tables will have the same appearance, I’ll display the final result just once:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://tech.ycwu.space/posts/table-body-custom-palette/table_body_custom_palette.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Table Body with a Custom Palette"></p>
</figure>
</div>
<section id="preparations" class="level2">
<h2 class="anchored" data-anchor-id="preparations">Preparations</h2>
<p>We’ll start by creating a <code>data</code> dictionary, which will be used with Pandas or Polars later. Additionally, we’ll define a <code>color_mapping</code> dictionary to store the palette information for styling.</p>
<div id="a6e627b3" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT, from_column, loc, style</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb1-5"></span>
<span id="cb1-6">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>],</span>
<span id="cb1-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>],</span>
<span id="cb1-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>],</span>
<span id="cb1-10">}</span>
<span id="cb1-11"></span>
<span id="cb1-12">color_mapping <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>}</span></code></pre></div>
</div>
</section>
<section id="pandas" class="level2">
<h2 class="anchored" data-anchor-id="pandas">Pandas</h2>
<p>First, we create a Pandas DataFrame called <code>df_pd</code> using <code>data</code> as the input:</p>
<div id="7e2cbefe" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df_pd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data)</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_pd)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>   col1 col2       color
0     2    x   lightgrey
1     5    y   lightblue
2     7    y   lightblue
3    10    z  papayawhip
4    15    z  papayawhip</code></pre>
</div>
</div>
<section id="using-an-existing-column" class="level3">
<h3 class="anchored" data-anchor-id="using-an-existing-column">Using an Existing Column</h3>
<p>In this straightforward scenario, the DataFrame already contains a predefined column with color names for each row. You can use the <a href="https://posit-dev.github.io/great-tables/reference/from_column.html#great_tables.from_column">from_column()</a> function provided by Great Tables to apply colors to the table body:</p>
<div id="9cc55b14" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">(</span>
<span id="cb4-2">    GT(df_pd)</span>
<span id="cb4-3">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>from_column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>)), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb4-4">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb4-5">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb4-6">)</span></code></pre></div>
</div>
</section>
<section id="using-functions" class="level3">
<h3 class="anchored" data-anchor-id="using-functions">Using Functions</h3>
<p>In cases where colors need to be determined dynamically based on conditions, the <a href="https://pandas.pydata.org/docs/reference/api/pandas.Series.case_when.html#pandas.Series.case_when">pd.Series.case_when()</a> function can be very useful. The following example categorizes the values of the <code>col1</code> column into three different colors:</p>
<div id="914a40b0" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> color_selector(df_):</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>].case_when(</span>
<span id="cb5-3">        [</span>
<span id="cb5-4">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>].lt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;3</span></span>
<span id="cb5-5">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>].lt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;10</span></span>
<span id="cb5-6">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>].ge(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt;=10</span></span>
<span id="cb5-7">        ]</span>
<span id="cb5-8">    )</span>
<span id="cb5-9"></span>
<span id="cb5-10"></span>
<span id="cb5-11">(</span>
<span id="cb5-12">    GT(df_pd)</span>
<span id="cb5-13">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_selector), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb5-14">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb5-15">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb5-16">)</span></code></pre></div>
</div>
<p>For categorical-like columns (e.g., <code>col2</code>), a simple value-to-color mapping may be sufficient. In such cases, a predefined dictionary can be used with <a href="https://pandas.pydata.org/docs/reference/api/pandas.Series.map.html#pandas.Series.map">pd.Series.map()</a> or <a href="https://pandas.pydata.org/docs/reference/api/pandas.Series.replace.html#pandas.Series.replace">pd.Series.replace()</a>:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">pd.Series.map()</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">pd.Series.replace()</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div id="319b1b82" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">(</span>
<span id="cb6-2">    GT(df_pd)</span>
<span id="cb6-3">    .tab_style(</span>
<span id="cb6-4">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> df_: df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(color_mapping)),</span>
<span id="cb6-5">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(),</span>
<span id="cb6-6">    )</span>
<span id="cb6-7">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb6-8">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb6-9">)</span></code></pre></div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div id="094bdb33" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">(</span>
<span id="cb7-2">    GT(df_pd)</span>
<span id="cb7-3">    .tab_style(</span>
<span id="cb7-4">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> df_: df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].replace(color_mapping)),</span>
<span id="cb7-5">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(),</span>
<span id="cb7-6">    )</span>
<span id="cb7-7">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb7-8">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb7-9">)</span></code></pre></div>
</div>
</div>
</div>
</div>
<p>Alternatively, if you prefer sticking with the same approach, <code>pd.Series.case_when()</code> still works:</p>
<div id="f357a79f" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> color_selector(df_):</span>
<span id="cb8-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].case_when(</span>
<span id="cb8-3">        [</span>
<span id="cb8-4">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].eq(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>),</span>
<span id="cb8-5">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].eq(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>),</span>
<span id="cb8-6">            (df_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>].eq(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>),</span>
<span id="cb8-7">        ]</span>
<span id="cb8-8">    )</span>
<span id="cb8-9"></span>
<span id="cb8-10"></span>
<span id="cb8-11">(</span>
<span id="cb8-12">    GT(df_pd)</span>
<span id="cb8-13">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_selector), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb8-14">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb8-15">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb8-16">)</span></code></pre></div>
</div>
</section>
</section>
<section id="polars" class="level2">
<h2 class="anchored" data-anchor-id="polars">Polars</h2>
<p>Just like before, let’s start by creating a Polars DataFrame named <code>df_pl</code> using <code>data</code> as input:</p>
<div id="5c948909" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">df_pl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.DataFrame(data)</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_pl)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>shape: (5, 3)
┌──────┬──────┬────────────┐
│ col1 ┆ col2 ┆ color      │
│ ---  ┆ ---  ┆ ---        │
│ i64  ┆ str  ┆ str        │
╞══════╪══════╪════════════╡
│ 2    ┆ x    ┆ lightgrey  │
│ 5    ┆ y    ┆ lightblue  │
│ 7    ┆ y    ┆ lightblue  │
│ 10   ┆ z    ┆ papayawhip │
│ 15   ┆ z    ┆ papayawhip │
└──────┴──────┴────────────┘</code></pre>
</div>
</div>
<section id="using-an-existing-column-1" class="level3">
<h3 class="anchored" data-anchor-id="using-an-existing-column-1">Using an Existing Column</h3>
<p>If the DataFrame already contains a column specifying colors, we can apply them directly with <code>from_column()</code>:</p>
<div id="4d5ab36e" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">(</span>
<span id="cb11-2">    GT(df_pl)</span>
<span id="cb11-3">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>from_column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>)), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb11-4">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb11-5">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb11-6">)</span></code></pre></div>
</div>
<p>As another option, we can reference the <code>color</code> column using a Polars expression:</p>
<div id="f3ec3784" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">(</span>
<span id="cb12-2">    GT(df_pl)</span>
<span id="cb12-3">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>)), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb12-4">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb12-5">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb12-6">)</span></code></pre></div>
</div>
</section>
<section id="using-conditional-logic-with-polars-expressions" class="level3">
<h3 class="anchored" data-anchor-id="using-conditional-logic-with-polars-expressions">Using Conditional Logic with Polars Expressions</h3>
<p>For cases where colors need to be assigned dynamically, <a href="https://docs.pola.rs/api/python/stable/reference/expressions/api/polars.when.html#polars.when">pl.when()</a> provides a structured way to define conditions. The example below assigns colors based on the values in <code>col1</code>:</p>
<div id="b38a0c4b" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">color_selector_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb13-2">    pl.when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>).lt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;3</span></span>
<span id="cb13-3">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>))</span>
<span id="cb13-4">    .when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>).lt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;10</span></span>
<span id="cb13-5">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>))</span>
<span id="cb13-6">    .when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col1"</span>).ge(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt;=10</span></span>
<span id="cb13-7">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>))</span>
<span id="cb13-8">)</span>
<span id="cb13-9"></span>
<span id="cb13-10">(</span>
<span id="cb13-11">    GT(df_pl)</span>
<span id="cb13-12">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_selector_expr), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb13-13">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb13-14">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb13-15">)</span></code></pre></div>
</div>
<p>For categorical-like columns (e.g., <code>col2</code>), predefined mappings can be applied efficiently using <a href="https://docs.pola.rs/api/python/stable/reference/expressions/api/polars.Expr.replace.html#polars.Expr.replace">pl.Expr.replace()</a>:</p>
<div id="88082b75" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">(</span>
<span id="cb14-2">    GT(df_pl)</span>
<span id="cb14-3">    .tab_style(</span>
<span id="cb14-4">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>).replace(color_mapping)),</span>
<span id="cb14-5">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(),</span>
<span id="cb14-6">    )</span>
<span id="cb14-7">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb14-8">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb14-9">)</span></code></pre></div>
</div>
<p>Alternatively, if you prefer the conditional approach, <code>pl.when()</code> can still be used:</p>
<div id="8708ccb2" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">color_selector_expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb15-2">    pl.when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>).eq(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)))</span>
<span id="cb15-3">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>))</span>
<span id="cb15-4">    .when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>).eq(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)))</span>
<span id="cb15-5">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>))</span>
<span id="cb15-6">    .when(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"col2"</span>).eq(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>)))</span>
<span id="cb15-7">    .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"papayawhip"</span>))</span>
<span id="cb15-8">)</span>
<span id="cb15-9"></span>
<span id="cb15-10"></span>
<span id="cb15-11">(</span>
<span id="cb15-12">    GT(df_pl)</span>
<span id="cb15-13">    .tab_style(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.fill(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_selector_expr), locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body())</span>
<span id="cb15-14">    .cols_align(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb15-15">    .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>)</span>
<span id="cb15-16">)</span></code></pre></div>
</div>
</section>
</section>
<section id="final-notes" class="level2">
<h2 class="anchored" data-anchor-id="final-notes">Final Notes</h2>
<p>In this post, we explored how to use a custom color palette to style table backgrounds with <a href="https://posit-dev.github.io/great-tables/reference/style.fill.html#great_tables.style.fill">style.fill()</a>. The same approach can be applied to customize text color using <a href="https://posit-dev.github.io/great-tables/reference/style.text.html#great_tables.style.text">style.text()</a> or adjust border color with <a href="https://posit-dev.github.io/great-tables/reference/style.borders.html#great_tables.style.borders">style.borders()</a>.</p>
<p>Lastly, remember that <a href="https://posit-dev.github.io/great-tables/reference/loc.body.html#great_tables.loc.body">loc.body()</a> allows you to target specific columns and rows, giving you precise control over table styling.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>pandas</category>
  <category>polars</category>
  <category>gt</category>
  <guid>https://tech.ycwu.space/posts/table-body-custom-palette/20250225.html</guid>
  <pubDate>Tue, 25 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/table-body-custom-palette/table_body_custom_palette.png" medium="image" type="image/png" height="190" width="144"/>
</item>
<item>
  <title>Weekend Challenge - Effective Data Visualization with Polars and Matplotlib</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/20250210.html</link>
  <description><![CDATA[ 





<p>It was an honor to be one of the reviewers for Matt Harrison’s new book, <a href="https://store.metasnake.com/effective-viz"><em>Effective Visualization</em></a>. If you’re looking to deepen your understanding of how to use Pandas and Matplotlib to craft compelling data stories, this book is a must-read.</p>
<p>Last weekend, I decided to convert some of the Pandas code from the book into Polars just for fun, and I’d like to share an example in this post. You can find the original Pandas code in the <a href="link">repo</a> (empty link for now).</p>
<p>The final figure, shown below, visualizes temperature trends for the ski season in Alta over the past few decades.</p>
<div id="35c62c0d" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Show full code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> highlight_text <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ax_text</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colormaps</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://github.com/mattharrison/datasets/raw/refs/heads/master/data/alta-noaa-1980-2019.csv</span></span>
<span id="cb1-10">data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alta-noaa-1980-2019.csv"</span></span>
<span id="cb1-11">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>]</span>
<span id="cb1-12">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.scan_csv(data_path).select(columns).collect()</span>
<span id="cb1-13"></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_season_expr(col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb1-17">        (</span>
<span id="cb1-18">            pl.when((pl.col(col).dt.month().is_between(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, closed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>)))</span>
<span id="cb1-19">            .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer "</span>))</span>
<span id="cb1-20">            .otherwise(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski "</span>))</span>
<span id="cb1-21">        )</span>
<span id="cb1-22">        .add(</span>
<span id="cb1-23">            pl.when(pl.col(col).dt.month() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb1-24">            .then(pl.col(col).dt.year().cast(pl.String))</span>
<span id="cb1-25">            .otherwise(pl.col(col).dt.year().add(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).cast(pl.String))</span>
<span id="cb1-26">        )</span>
<span id="cb1-27">        .alias(alias)</span>
<span id="cb1-28">    )</span>
<span id="cb1-29"></span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_day_of_season_expr(</span>
<span id="cb1-32">    col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb1-33">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb1-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb1-35">        (pl.col(col) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pl.col(col).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()).dt.total_days().over(group_col).alias(alias)</span>
<span id="cb1-36">    )</span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb1-40">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span></span>
<span id="cb1-41">    figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pts</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> points_to_inches(points):</span>
<span id="cb1-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span></span>
<span id="cb1-45"></span>
<span id="cb1-46">    figsize_inches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [points_to_inches(dim) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> figsize]</span>
<span id="cb1-47"></span>
<span id="cb1-48">    heading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span></span>
<span id="cb1-49">    heading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span></span>
<span id="cb1-50">    subheading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb1-51">    subheading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb1-52">    source_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span></span>
<span id="cb1-53">    source_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"light"</span></span>
<span id="cb1-54">    axis_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb1-55">    axis_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb1-56"></span>
<span id="cb1-57">    grey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aaaaaa"</span></span>
<span id="cb1-58">    red <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e3120b"</span></span>
<span id="cb1-59">    blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0000ff"</span></span>
<span id="cb1-60">    cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormaps.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grays"</span>)</span>
<span id="cb1-61"></span>
<span id="cb1-62">    layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]]</span>
<span id="cb1-63">    fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplot_mosaic(</span>
<span id="cb1-64">        layout,</span>
<span id="cb1-65">        gridspec_kw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height_ratios"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]},</span>
<span id="cb1-66">        figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize_inches,</span>
<span id="cb1-67">        dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb1-68">        constrained_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb1-69">    )</span>
<span id="cb1-70"></span>
<span id="cb1-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Title -----</span></span>
<span id="cb1-72">    ax_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb1-73">    ax_title.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-74">    sub_props <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: subheading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: subheading_fontweight}</span>
<span id="cb1-75">    ax_text(</span>
<span id="cb1-76">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;Alta Ski Resort&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;Temperature trends by &gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;decade&gt;&lt; and &gt;&lt;2019&gt;"</span>,</span>
<span id="cb1-77">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-78">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-79">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>heading_fontsize,</span>
<span id="cb1-80">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax_title,</span>
<span id="cb1-81">        va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb1-82">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb1-83">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-84">        highlight_textprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb1-85">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: heading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: heading_fontweight},</span>
<span id="cb1-86">            sub_props,</span>
<span id="cb1-87">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: blue, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb1-88">            sub_props,</span>
<span id="cb1-89">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: red, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb1-90">        ],</span>
<span id="cb1-91">    )</span>
<span id="cb1-92"></span>
<span id="cb1-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Plot -----</span></span>
<span id="cb1-94">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>]</span>
<span id="cb1-95">    season_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski"</span>)).pivot(</span>
<span id="cb1-96">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname, values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span></span>
<span id="cb1-97">    )</span>
<span id="cb1-98">    season_temps_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps[idx_colname]</span>
<span id="cb1-99"></span>
<span id="cb1-100">    columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.columns</span>
<span id="cb1-101">    columns.remove(idx_colname)</span>
<span id="cb1-102">    columns.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)</span>
<span id="cb1-103">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(columns):</span>
<span id="cb1-104">        color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns))</span>
<span id="cb1-105">        ax.plot(</span>
<span id="cb1-106">            season_temps_index,</span>
<span id="cb1-107">            season_temps[column],</span>
<span id="cb1-108">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-109">            linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-110">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb1-111">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-112">        )</span>
<span id="cb1-113"></span>
<span id="cb1-114">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ---- Decade Averages ----</span></span>
<span id="cb1-115">    decades <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>]</span>
<span id="cb1-116">    blues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0055EE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0033CC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0011AA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3377FF"</span>]</span>
<span id="cb1-117">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decade, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(decades, blues):</span>
<span id="cb1-118">        match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(decade)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1980 -&gt; "198", 2010 -&gt; "201"</span></span>
<span id="cb1-119">        decade_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(cs.contains(match)).mean_horizontal()</span>
<span id="cb1-120">        ax.plot(season_temps_index, decade_temps, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-121"></span>
<span id="cb1-122">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add label to right of line</span></span>
<span id="cb1-123">        last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decade_temps.last()</span>
<span id="cb1-124"></span>
<span id="cb1-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>:</span>
<span id="cb1-126">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-127">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>:</span>
<span id="cb1-128">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb1-129"></span>
<span id="cb1-130">        ax.text(</span>
<span id="cb1-131">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>,</span>
<span id="cb1-132">            last_y_label,</span>
<span id="cb1-133">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decade<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb1-134">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb1-135">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb1-136">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize,</span>
<span id="cb1-137">            fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight,</span>
<span id="cb1-138">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-139">        )</span>
<span id="cb1-140">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add dot to start and end of each line</span></span>
<span id="cb1-141">        ax.plot(</span>
<span id="cb1-142">            season_temps_index.first(),</span>
<span id="cb1-143">            decade_temps.first(),</span>
<span id="cb1-144">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-145">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-146">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-147">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-148">        )</span>
<span id="cb1-149">        ax.plot(</span>
<span id="cb1-150">            season_temps_index.last(),</span>
<span id="cb1-151">            decade_temps.last(),</span>
<span id="cb1-152">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-153">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb1-154">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb1-155">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-156">        )</span>
<span id="cb1-157"></span>
<span id="cb1-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ski 2019 ------</span></span>
<span id="cb1-159">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # plot `Ski 2019` in red</span></span>
<span id="cb1-160">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(idx_colname, cs.by_name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)).drop_nulls()</span>
<span id="cb1-161">    ski_2019_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019[idx_colname]</span>
<span id="cb1-162">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019.drop([idx_colname]).to_series()</span>
<span id="cb1-163">    ax.plot(ski_2019_index, ski_2019, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-164"></span>
<span id="cb1-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add dot to start and end of each line</span></span>
<span id="cb1-166">    ax.plot(</span>
<span id="cb1-167">        ski_2019_index.first(),</span>
<span id="cb1-168">        ski_2019.first(),</span>
<span id="cb1-169">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-170">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb1-171">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-172">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-173">    )</span>
<span id="cb1-174">    ax.plot(</span>
<span id="cb1-175">        ski_2019_index.last(),</span>
<span id="cb1-176">        ski_2019.last(),</span>
<span id="cb1-177">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb1-178">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb1-179">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-180">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-181">    )</span>
<span id="cb1-182"></span>
<span id="cb1-183">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ticks &amp; Lines ------</span></span>
<span id="cb1-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # remove spines</span></span>
<span id="cb1-185">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> side <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>]:</span>
<span id="cb1-186">        ax.spines[side].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-187"></span>
<span id="cb1-188">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add horizontal line at 32F</span></span>
<span id="cb1-189">    ax.axhline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-190"></span>
<span id="cb1-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y ticks</span></span>
<span id="cb1-192">    ax.set_yticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>])</span>
<span id="cb1-193"></span>
<span id="cb1-194">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y limit</span></span>
<span id="cb1-195">    ax.set_ylim([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>])</span>
<span id="cb1-196"></span>
<span id="cb1-197">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set x label</span></span>
<span id="cb1-198">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Day of season"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight)</span>
<span id="cb1-199"></span>
<span id="cb1-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Source ------</span></span>
<span id="cb1-201">    ax_notes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]</span>
<span id="cb1-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add source</span></span>
<span id="cb1-203">    ax_notes.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb1-204">    ax_notes.text(</span>
<span id="cb1-205">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-206">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb1-207">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source: NOAA"</span>,</span>
<span id="cb1-208">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontsize,</span>
<span id="cb1-209">        fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontweight,</span>
<span id="cb1-210">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grey,</span>
<span id="cb1-211">    )</span>
<span id="cb1-212">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_</span>
<span id="cb1-213"></span>
<span id="cb1-214"></span>
<span id="cb1-215">idx_colname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb1-216"></span>
<span id="cb1-217">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-218">    df.with_columns(</span>
<span id="cb1-219">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.to_datetime(),</span>
<span id="cb1-220">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).interpolate(),</span>
<span id="cb1-221">    )</span>
<span id="cb1-222">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>)</span>
<span id="cb1-223">    .with_columns(</span>
<span id="cb1-224">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Caveat: Cannot be placed in the previous `with_columns()`</span></span>
<span id="cb1-225">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># due to different statuses of `TOBS`.</span></span>
<span id="cb1-226">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).rolling_mean(window_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>),</span>
<span id="cb1-227">        get_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>),</span>
<span id="cb1-228">    )</span>
<span id="cb1-229">    .with_columns(</span>
<span id="cb1-230">        add_day_of_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname)</span>
<span id="cb1-231">    )</span>
<span id="cb1-232">    .pipe(partial(plot_temps, idx_colname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname))</span>
<span id="cb1-233">)</span></code></pre></div>
</details>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/alta_ski_resort.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="Alta ski resort"></p>
</figure>
</div>
<section id="loading-the-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-data">Loading the Data</h2>
<p>To begin, we load the dataset, focusing on two key columns:</p>
<ul>
<li><strong><code>DATE</code></strong>: The dates.</li>
<li><strong><code>TOBS</code></strong>: The recorded temperature in Fahrenheit.</li>
</ul>
<div id="19dcc7c3" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars.selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> highlight_text <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ax_text</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colormaps</span>
<span id="cb2-8"></span>
<span id="cb2-9">data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alta-noaa-1980-2019.csv"</span></span>
<span id="cb2-10">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>]</span>
<span id="cb2-11">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.scan_csv(data_path).select(columns).collect()</span>
<span id="cb2-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>shape: (5, 2)
┌────────────┬──────┐
│ DATE       ┆ TOBS │
│ ---        ┆ ---  │
│ str        ┆ i64  │
╞════════════╪══════╡
│ 1980-01-01 ┆ 25   │
│ 1980-01-02 ┆ 18   │
│ 1980-01-03 ┆ 18   │
│ 1980-01-04 ┆ 27   │
│ 1980-01-05 ┆ 34   │
└────────────┴──────┘</code></pre>
</div>
</div>
</section>
<section id="data-processing-pipeline" class="level2">
<h2 class="anchored" data-anchor-id="data-processing-pipeline">Data Processing Pipeline</h2>
<p>Here’s the pipeline for generating the final figure:</p>
<div class="sourceCode" id="annotated-cell-3" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-3-1">idx_colname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-3-2"></span>
<span id="annotated-cell-3-3">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="annotated-cell-3-4">    df.with_columns(</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-3-5" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.to_datetime(),</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-3-6" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).interpolate(),</span>
<span id="annotated-cell-3-7">    )</span>
<span id="annotated-cell-3-8">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>)</span>
<span id="annotated-cell-3-9">    .with_columns(</span>
<span id="annotated-cell-3-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Caveat: Cannot be placed in the previous `with_columns()`</span></span>
<span id="annotated-cell-3-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># due to different statuses of `TOBS`.</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-3-12" class="code-annotation-target">        pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOBS"</span>).rolling_mean(window_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>),</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-3-13" class="code-annotation-target">        get_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>),</span>
<span id="annotated-cell-3-14">    )</span>
<span id="annotated-cell-3-15">    .with_columns(</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="5" onclick="event.preventDefault();">5</a><span id="annotated-cell-3-16" class="code-annotation-target">        add_day_of_season_expr(col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname)</span>
<span id="annotated-cell-3-17">    ) </span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-3" data-target-annotation="6" onclick="event.preventDefault();">6</a><span id="annotated-cell-3-18" class="code-annotation-target">    .pipe(partial(plot_temps, idx_colname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname))</span>
<span id="annotated-cell-3-19">)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-3" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="5" data-code-annotation="1">Convert the <code>DATE</code> column to a datetime format.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="6" data-code-annotation="2">Perform interpolation on the <code>TOBS</code> column.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="12" data-code-annotation="3">Compute a 28-day rolling average for <code>TOBS</code>.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="13" data-code-annotation="4">Use <code>get_season_expr()</code> to categorize each date into a <code>SEASON</code>.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="16" data-code-annotation="5">Apply <code>add_day_of_season_expr()</code> to calculate <code>DAY_OF_SEASON</code>, representing days elapsed since the start of the season.<br>
</span>
</dd>
<dt data-target-cell="annotated-cell-3" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-3" data-code-lines="18" data-code-annotation="6">Use <code>plot_temps()</code> to generate the final visualization with Matplotlib.</span>
</dd>
</dl>
<p>The first three steps involve straightforward Polars expressions. In the following sections, we’ll dive deeper into steps 4 to 6.</p>
</section>
<section id="categorizing-dates-into-summer-and-ski-seasons" class="level2">
<h2 class="anchored" data-anchor-id="categorizing-dates-into-summer-and-ski-seasons">Categorizing Dates into <code>Summer</code> and <code>Ski</code> Seasons</h2>
<p>To analyze seasonal trends, we classify dates into two categories:</p>
<ul>
<li><strong><code>Summer</code></strong>: Covers May through October.<br>
</li>
<li><strong><code>Ski</code></strong>: Covers November through April.</li>
</ul>
<p>If a date falls in November or December, it is assigned to the following year’s season. For example, <code>2015-10-31</code> is categorized as <code>Summer 2015</code>, while <code>2015-11-01</code> belongs to <code>Ski 2016</code>.</p>
<p>To implement this logic, we define <code>get_season_expr()</code>, which leverages Polars’ <a href="https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.when.html">when-then-otherwise</a> expressions to determine the season and year.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_season_expr(col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb4-3">        (</span>
<span id="cb4-4">            pl.when((pl.col(col).dt.month().is_between(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, closed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"both"</span>)))</span>
<span id="cb4-5">            .then(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer "</span>))</span>
<span id="cb4-6">            .otherwise(pl.lit(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski "</span>))</span>
<span id="cb4-7">        )</span>
<span id="cb4-8">        .add(</span>
<span id="cb4-9">            pl.when(pl.col(col).dt.month() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb4-10">            .then(pl.col(col).dt.year().cast(pl.String))</span>
<span id="cb4-11">            .otherwise(pl.col(col).dt.year().add(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).cast(pl.String))</span>
<span id="cb4-12">        )</span>
<span id="cb4-13">        .alias(alias)</span>
<span id="cb4-14">    )</span></code></pre></div>
<p>In this function:</p>
<ul>
<li>If the month is between May and October, the function assigns <code>"Summer "</code>. Otherwise, it assigns <code>"Ski "</code> (with a trailing space for concatenation).<br>
</li>
<li>The year is determined based on the month: dates from January to October retain their current year, while those in November and December are shifted to the next year.</li>
</ul>
<p>By applying this function, we can add a <code>SEASON</code> column to a Polars DataFrame, ensuring each date is categorized correctly.</p>
</section>
<section id="calculating-the-total-days-for-each-season" class="level2">
<h2 class="anchored" data-anchor-id="calculating-the-total-days-for-each-season">Calculating the Total Days for Each Season</h2>
<p>Once we have the seasonal categories, we calculate <code>DAY_OF_SEASON</code>, which tracks the number of days elapsed within each season. This is achieved using the <a href="https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.Expr.over.html">pl.expr.over()</a> expression, which operates similarly to Pandas’ <code>groupby().transform()</code>, applying transformations within groups.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_day_of_season_expr(</span>
<span id="cb5-2">    col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DATE"</span>, group_col: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, alias: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb5-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.expr:</span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (</span>
<span id="cb5-5">        (pl.col(col) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pl.col(col).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()).dt.total_days().over(group_col).alias(alias)</span>
<span id="cb5-6">    )</span></code></pre></div>
</section>
<section id="visualizing-temperature-trends-with-matplotlib" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-temperature-trends-with-matplotlib">Visualizing Temperature Trends with Matplotlib</h2>
<p>With the data prepared, we move on to plotting. Since <code>plot_temps()</code> is quite long, we’ll break it down into several parts for easier explanation</p>
<section id="setting-up-the-figure" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-the-figure">Setting Up the Figure</h3>
<p>We start by defining some parameters and using <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.subplot_mosaic.html">plt.subplot_mosaic()</a> to create the figure layout. This provides structured axes for different elements of the visualization.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb6-2">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"font.family"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roboto"</span></span>
<span id="cb6-3">    figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">165</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pts</span></span>
<span id="cb6-4"></span>
<span id="cb6-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> points_to_inches(points):</span>
<span id="cb6-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">    figsize_inches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [points_to_inches(dim) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> figsize]</span>
<span id="cb6-9"></span>
<span id="cb6-10">    heading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span></span>
<span id="cb6-11">    heading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span></span>
<span id="cb6-12">    subheading_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb6-13">    subheading_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb6-14">    source_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span></span>
<span id="cb6-15">    source_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"light"</span></span>
<span id="cb6-16">    axis_fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb6-17">    axis_fontweight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span></span>
<span id="cb6-18"></span>
<span id="cb6-19">    grey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aaaaaa"</span></span>
<span id="cb6-20">    red <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e3120b"</span></span>
<span id="cb6-21">    blue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0000ff"</span></span>
<span id="cb6-22">    cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormaps.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grays"</span>)</span>
<span id="cb6-23"></span>
<span id="cb6-24">    layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>], [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]]</span>
<span id="cb6-25">    fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplot_mosaic(</span>
<span id="cb6-26">        layout,</span>
<span id="cb6-27">        gridspec_kw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height_ratios"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]},</span>
<span id="cb6-28">        figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize_inches,</span>
<span id="cb6-29">        dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb6-30">        constrained_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-31">    )</span>
<span id="cb6-32">    ...</span>
<span id="cb6-33">    </span></code></pre></div>
</section>
<section id="adding-the-title" class="level3">
<h3 class="anchored" data-anchor-id="adding-the-title">Adding the Title</h3>
<p>For the title, we use <code>ax_text()</code> from the <a href="https://github.com/znstrider/highlight_text">HighlightText</a> library, which allows selective styling of text enclosed in <code>&lt; &gt;</code>. This lets us highlight key parts of the title, such as <code>&lt;Alta Ski Resort&gt;</code>, <code>&lt;Temperature trends by &gt;</code>, <code>&lt;decade&gt;</code>, <code>&lt; and &gt;</code>, and <code>&lt;2019&gt;</code>, with custom formatting.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb7-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb7-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb7-4">    ...</span>
<span id="cb7-5"></span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Title -----</span></span>
<span id="cb7-7">    ax_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb7-8">    ax_title.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb7-9">    sub_props <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: subheading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: subheading_fontweight}</span>
<span id="cb7-10">    ax_text(</span>
<span id="cb7-11">        s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;Alta Ski Resort&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;Temperature trends by &gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;decade&gt;&lt; and &gt;&lt;2019&gt;"</span>,</span>
<span id="cb7-12">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-13">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb7-14">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>heading_fontsize,</span>
<span id="cb7-15">        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax_title,</span>
<span id="cb7-16">        va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb7-17">        ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb7-18">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb7-19">        highlight_textprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb7-20">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontsize"</span>: heading_fontsize, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fontweight"</span>: heading_fontweight},</span>
<span id="cb7-21">            sub_props,</span>
<span id="cb7-22">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: blue, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb7-23">            sub_props,</span>
<span id="cb7-24">            {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color"</span>: red, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>sub_props},</span>
<span id="cb7-25">        ],</span>
<span id="cb7-26">    )</span></code></pre></div>
</section>
<section id="plotting-seasonal-trends" class="level3">
<h3 class="anchored" data-anchor-id="plotting-seasonal-trends">Plotting Seasonal Trends</h3>
<p>Next, we generate the main plot by:</p>
<ol type="1">
<li>Filtering the dataset for <code>Ski</code> seasons.<br>
</li>
<li>Pivoting the table to organize <code>TMEAN</code> values by <code>DAY_OF_SEASON</code> and <code>SEASON</code>.<br>
</li>
<li>Using <code>ax.plot()</code> to draw a separate line for each <code>Ski</code> season.</li>
</ol>
<div class="sourceCode" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy"><code class="sourceCode python"><span id="annotated-cell-8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-8-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-8-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-8-4">    ...</span>
<span id="annotated-cell-8-5"></span>
<span id="annotated-cell-8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ----- Plot -----</span></span>
<span id="annotated-cell-8-7">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>]</span>
<span id="annotated-cell-8-8">    season_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski"</span>)).pivot(</span>
<span id="annotated-cell-8-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SEASON"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>idx_colname, values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TMEAN"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first"</span></span>
<span id="annotated-cell-8-10">    )</span>
<span id="annotated-cell-8-11">    season_temps_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps[idx_colname]</span>
<span id="annotated-cell-8-12"></span>
<span id="annotated-cell-8-13">    columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.columns</span>
<span id="annotated-cell-8-14">    columns.remove(idx_colname)</span>
<span id="annotated-cell-8-15">    columns.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)</span>
<span id="annotated-cell-8-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(columns):</span>
<span id="annotated-cell-8-17">        color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns))</span>
<span id="annotated-cell-8-18">        ax.plot(</span>
<span id="annotated-cell-8-19">            season_temps_index,</span>
<span id="annotated-cell-8-20">            season_temps[column],</span>
<span id="annotated-cell-8-21">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-8-22">            linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-8-23">            alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="annotated-cell-8-24">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-8-25">        )</span></code></pre></div>
<p>To illustrate long-term trends, we overlay four lines representing the average temperature trends for different decades, marking their start and end points with dots for emphasis.</p>
<div class="sourceCode" id="annotated-cell-9" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-9-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-9-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-9-4">    ...</span>
<span id="annotated-cell-9-5"></span>
<span id="annotated-cell-9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ---- Decade Averages ----</span></span>
<span id="annotated-cell-9-7">    decades <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1990</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>]</span>
<span id="annotated-cell-9-8">    blues <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0055EE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0033CC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0011AA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3377FF"</span>]</span>
<span id="annotated-cell-9-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> decade, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(decades, blues):</span>
<span id="annotated-cell-9-10">        match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(decade)[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1980 -&gt; "198", 2010 -&gt; "201"</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-9-11" class="code-annotation-target">        decade_temps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(cs.contains(match)).mean_horizontal()</span>
<span id="annotated-cell-9-12">        ax.plot(season_temps_index, decade_temps, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-9-13"></span>
<span id="annotated-cell-9-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add label to right of line</span></span>
<span id="annotated-cell-9-15">        last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decade_temps.last()</span>
<span id="annotated-cell-9-16"></span>
<span id="annotated-cell-9-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>:</span>
<span id="annotated-cell-9-18">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="annotated-cell-9-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> decade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2010</span>:</span>
<span id="annotated-cell-9-20">            last_y_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="annotated-cell-9-21"></span>
<span id="annotated-cell-9-22">        ax.text(</span>
<span id="annotated-cell-9-23">            <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>,</span>
<span id="annotated-cell-9-24">            last_y_label,</span>
<span id="annotated-cell-9-25">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decade<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="annotated-cell-9-26">            va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="annotated-cell-9-27">            ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="annotated-cell-9-28">            fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize,</span>
<span id="annotated-cell-9-29">            fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight,</span>
<span id="annotated-cell-9-30">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-31">        )</span>
<span id="annotated-cell-9-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add dot to start and end of each line</span></span>
<span id="annotated-cell-9-33">        ax.plot(</span>
<span id="annotated-cell-9-34">            season_temps_index.first(),</span>
<span id="annotated-cell-9-35">            decade_temps.first(),</span>
<span id="annotated-cell-9-36">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-9-37">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-38">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-9-39">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-9-40">        )</span>
<span id="annotated-cell-9-41">        ax.plot(</span>
<span id="annotated-cell-9-42">            season_temps_index.last(),</span>
<span id="annotated-cell-9-43">            decade_temps.last(),</span>
<span id="annotated-cell-9-44">            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-9-45">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="annotated-cell-9-46">            markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="annotated-cell-9-47">            zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-9-48">        )</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-9" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="11" data-code-annotation="1">We leverage two powerful features of Polars: <a href="https://docs.pola.rs/api/python/dev/reference/selectors.html">Polars selectors</a>, which enable efficient column selection based on name patterns to extract data for each decade (<code>cs.contains(match)</code>), and <a href="https://docs.pola.rs/api/python/dev/reference/dataframe/api/polars.DataFrame.mean_horizontal.html">df.mean_horizontal()</a>, which performs vectorized operations across columns to compute the average temperature for each decade.</span>
</dd>
</dl>
</section>
<section id="highlighting-the-2019-ski-season" class="level3">
<h3 class="anchored" data-anchor-id="highlighting-the-2019-ski-season">Highlighting the 2019 Ski Season</h3>
<p>To make <code>Ski 2019</code> stand out, we plot its trend in red and highlight its start and end points with dots, similar to the decade lines.</p>
<div class="sourceCode" id="annotated-cell-10" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="annotated-cell-10-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="annotated-cell-10-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="annotated-cell-10-4">    ...</span>
<span id="annotated-cell-10-5"></span>
<span id="annotated-cell-10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ski 2019 ------</span></span>
<span id="annotated-cell-10-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # plot `Ski 2019` in red</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-10-8" class="code-annotation-target">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> season_temps.select(idx_colname, cs.by_name(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ski 2019"</span>)).drop_nulls()</span>
<span id="annotated-cell-10-9">    ski_2019_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019[idx_colname]</span>
<span id="annotated-cell-10-10">    ski_2019 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ski_2019.drop([idx_colname]).to_series()</span>
<span id="annotated-cell-10-11">    ax.plot(ski_2019_index, ski_2019, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-10-12"></span>
<span id="annotated-cell-10-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add dot to start and end of each line</span></span>
<span id="annotated-cell-10-14">    ax.plot(</span>
<span id="annotated-cell-10-15">        ski_2019_index.first(),</span>
<span id="annotated-cell-10-16">        ski_2019.first(),</span>
<span id="annotated-cell-10-17">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-10-18">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="annotated-cell-10-19">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-20">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-21">    )</span>
<span id="annotated-cell-10-22">    ax.plot(</span>
<span id="annotated-cell-10-23">        ski_2019_index.last(),</span>
<span id="annotated-cell-10-24">        ski_2019.last(),</span>
<span id="annotated-cell-10-25">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="annotated-cell-10-26">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="annotated-cell-10-27">        markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-28">        zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="annotated-cell-10-29">    )</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-10" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-10" data-code-lines="8" data-code-annotation="1">We use the Polars selector (<code>cs.by_name()</code>) to isolate the <code>Ski 2019</code> data.</span>
</dd>
</dl>
</section>
<section id="refinements-for-clarity" class="level3">
<h3 class="anchored" data-anchor-id="refinements-for-clarity">Refinements for Clarity</h3>
<p>To enhance readability, we refine the visualization by adjusting:</p>
<ul>
<li><strong>Spines</strong>: Removing unnecessary borders.<br>
</li>
<li><strong>Reference Line</strong>: Adding a horizontal dashed line at 32°F for context.<br>
</li>
<li><strong>Ticks &amp; Limits</strong>: Setting appropriate y-axis ticks and limits.<br>
</li>
<li><strong>Labels</strong>: Customizing the x-axis label for clarity.</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb8-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb8-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb8-4">    ...</span>
<span id="cb8-5"></span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Ticks &amp; Lines ------</span></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # remove spines</span></span>
<span id="cb8-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> side <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>]:</span>
<span id="cb8-9">        ax.spines[side].set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # add horizontal line at 32F</span></span>
<span id="cb8-12">    ax.axhline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y ticks</span></span>
<span id="cb8-15">    ax.set_yticks(ticks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>])</span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set y limit</span></span>
<span id="cb8-18">    ax.set_ylim([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>])</span>
<span id="cb8-19"></span>
<span id="cb8-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # set x label</span></span>
<span id="cb8-21">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Day of season"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontsize, fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axis_fontweight)</span></code></pre></div>
</section>
<section id="adding-notes" class="level3">
<h3 class="anchored" data-anchor-id="adding-notes">Adding Notes</h3>
<p>Finally, we use Matplotlib’s <code>ax.text()</code> to annotate the source of the data.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_temps(</span>
<span id="cb9-2">    df_: pl.DataFrame, idx_colname: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DAY_OF_SEASON"</span></span>
<span id="cb9-3">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> pl.DataFrame:</span>
<span id="cb9-4">    ...</span>
<span id="cb9-5"></span>
<span id="cb9-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # ------ Source ------</span></span>
<span id="cb9-7">    ax_notes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axs[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notes"</span>]</span>
<span id="cb9-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add source</span></span>
<span id="cb9-9">    ax_notes.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb9-10">    ax_notes.text(</span>
<span id="cb9-11">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-12">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source: NOAA"</span>,</span>
<span id="cb9-14">        fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontsize,</span>
<span id="cb9-15">        fontweight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>source_fontweight,</span>
<span id="cb9-16">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grey,</span>
<span id="cb9-17">    )</span>
<span id="cb9-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_</span></code></pre></div>
</section>
</section>
<section id="wrapping-up" class="level2">
<h2 class="anchored" data-anchor-id="wrapping-up">Wrapping Up</h2>
<p>Recreating this figure with Polars turned out to be more involved than I initially expected. However, the process was incredibly rewarding, as it deepened my understanding of Pandas, Polars, and Matplotlib. Switching between Pandas and Polars required a shift in mindset, but it also reinforced key concepts in both libraries. I look forward to exploring more of these challenges in the future.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>pandas</category>
  <category>polars</category>
  <category>matplotlib</category>
  <guid>https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/20250210.html</guid>
  <pubDate>Mon, 10 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/effective-dataviz-polars-alta-ski-resort/alta_ski_resort.png" medium="image" type="image/png" height="149" width="144"/>
</item>
<item>
  <title>Three Approaches to Styling the Table Body in Great Tables</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/style-table-body/20250124.html</link>
  <description><![CDATA[ 





<p>This post demonstrates three approaches to styling the table body:</p>
<ul>
<li><strong>Using a for-loop:</strong> Repeatedly call <code>GT.tab_style()</code> for each column.</li>
<li><strong>Utilizing the <code>locations=</code> parameter in <code>GT.tab_style()</code>:</strong> Pass a list of <code>loc.body()</code> objects.</li>
<li><strong>Leveraging the <code>mask=</code> parameter in <code>loc.body()</code>:</strong> Use Polars expressions for streamlined styling.</li>
</ul>
<p>Let’s dive in.</p>
<section id="preparations" class="level2">
<h2 class="anchored" data-anchor-id="preparations">Preparations</h2>
<p>We’ll use the built-in dataset <code>gtcars</code> to create a Polars DataFrame. First, we’ll select the columns <code>mfr</code>, <code>drivetrain</code>, <code>year</code>, and <code>hp</code> to create a small pivoted table named <code>df_mini</code>. Then, we’ll pass <code>df_mini</code> to the <code>GT</code> object and use <code>GT.tab_stub()</code>, setting <code>drivetrain</code> as <code>rowname_col=</code> and <code>mfr</code> as <code>groupname_col=</code> to create the table <code>gt</code>, as shown below:</p>
<div id="269bb5c2" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT, loc, style</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gtcars</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> selectors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cs</span>
<span id="cb1-5"></span>
<span id="cb1-6">year_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2014"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2015"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2016"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2017"</span>]</span>
<span id="cb1-7">df_mini <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb1-8">    pl.from_pandas(gtcars)</span>
<span id="cb1-9">    .<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(pl.col(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>).is_in([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ferrari"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lamborghini"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMW"</span>]))</span>
<span id="cb1-10">    .sort(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>)</span>
<span id="cb1-11">    .pivot(on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>], values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hp"</span>, aggregate_function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>)</span>
<span id="cb1-12">    .select([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>year_cols])</span>
<span id="cb1-13">)</span>
<span id="cb1-14"></span>
<span id="cb1-15">gt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GT(df_mini).tab_stub(rowname_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drivetrain"</span>, groupname_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mfr"</span>).opt_stylize()</span>
<span id="cb1-16">gt</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="1">
<div id="hqnycnnxjw" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#hqnycnnxjw table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#hqnycnnxjw thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#hqnycnnxjw p { margin: 0; padding: 0; }
 #hqnycnnxjw .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #hqnycnnxjw .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #hqnycnnxjw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #hqnycnnxjw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #hqnycnnxjw .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #hqnycnnxjw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #hqnycnnxjw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #hqnycnnxjw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #hqnycnnxjw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #hqnycnnxjw .gt_column_spanner_outer:first-child { padding-left: 0; }
 #hqnycnnxjw .gt_column_spanner_outer:last-child { padding-right: 0; }
 #hqnycnnxjw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #hqnycnnxjw .gt_spanner_row { border-bottom-style: hidden; }
 #hqnycnnxjw .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #hqnycnnxjw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #hqnycnnxjw .gt_from_md> :first-child { margin-top: 0; }
 #hqnycnnxjw .gt_from_md> :last-child { margin-bottom: 0; }
 #hqnycnnxjw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #hqnycnnxjw .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #hqnycnnxjw .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #hqnycnnxjw .gt_row_group_first td { border-top-width: 2px; }
 #hqnycnnxjw .gt_row_group_first th { border-top-width: 2px; }
 #hqnycnnxjw .gt_striped { background-color: #F4F4F4; }
 #hqnycnnxjw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #hqnycnnxjw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #hqnycnnxjw .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #hqnycnnxjw .gt_left { text-align: left; }
 #hqnycnnxjw .gt_center { text-align: center; }
 #hqnycnnxjw .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #hqnycnnxjw .gt_font_normal { font-weight: normal; }
 #hqnycnnxjw .gt_font_bold { font-weight: bold; }
 #hqnycnnxjw .gt_font_italic { font-style: italic; }
 #hqnycnnxjw .gt_super { font-size: 65%; }
 #hqnycnnxjw .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #hqnycnnxjw .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td class="gt_row gt_right gt_striped">678.4</td>
    <td class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
<p>The numbers in the cells represent the average horsepower for each combination of <code>mfr</code> and <code>drivetrain</code> for a specific year.</p>
<p>In the following section, we’ll demonstrate three different ways to highlight the cell text in red if the average horsepower exceeds 650.</p>
</section>
<section id="using-a-for-loop-repeatedly-call-gt.tab_style-for-each-column" class="level2">
<h2 class="anchored" data-anchor-id="using-a-for-loop-repeatedly-call-gt.tab_style-for-each-column">Using a For-Loop: Repeatedly Call <code>GT.tab_style()</code> for Each Column</h2>
<p>The most intuitive way is to call <code>GT.tab_style()</code> for each column. Here’s how:</p>
<div id="b8a7aae9" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode python code-annotation-code code-with-copy code-annotated"><code class="sourceCode python"><a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-2-1" class="code-annotation-target">gt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt</span>
<span id="annotated-cell-2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> year_cols:</span>
<span id="annotated-cell-2-3">    gt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt1.tab_style(</span>
<span id="annotated-cell-2-4">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="annotated-cell-2-5">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col, rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(col).gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="annotated-cell-2-6">    )</span>
<span id="annotated-cell-2-7">gt1</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="1" data-code-annotation="1">Since we want to keep <code>gt</code> intact for later use, we will modify <code>gt1</code> in this approach instead.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div id="mpawqtcegm" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#mpawqtcegm table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#mpawqtcegm thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#mpawqtcegm p { margin: 0; padding: 0; }
 #mpawqtcegm .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #mpawqtcegm .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #mpawqtcegm .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #mpawqtcegm .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #mpawqtcegm .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #mpawqtcegm .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #mpawqtcegm .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #mpawqtcegm .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #mpawqtcegm .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #mpawqtcegm .gt_column_spanner_outer:first-child { padding-left: 0; }
 #mpawqtcegm .gt_column_spanner_outer:last-child { padding-right: 0; }
 #mpawqtcegm .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #mpawqtcegm .gt_spanner_row { border-bottom-style: hidden; }
 #mpawqtcegm .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #mpawqtcegm .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #mpawqtcegm .gt_from_md> :first-child { margin-top: 0; }
 #mpawqtcegm .gt_from_md> :last-child { margin-bottom: 0; }
 #mpawqtcegm .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #mpawqtcegm .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #mpawqtcegm .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #mpawqtcegm .gt_row_group_first td { border-top-width: 2px; }
 #mpawqtcegm .gt_row_group_first th { border-top-width: 2px; }
 #mpawqtcegm .gt_striped { background-color: #F4F4F4; }
 #mpawqtcegm .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #mpawqtcegm .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #mpawqtcegm .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #mpawqtcegm .gt_left { text-align: left; }
 #mpawqtcegm .gt_center { text-align: center; }
 #mpawqtcegm .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #mpawqtcegm .gt_font_normal { font-weight: normal; }
 #mpawqtcegm .gt_font_bold { font-weight: bold; }
 #mpawqtcegm .gt_font_italic { font-style: italic; }
 #mpawqtcegm .gt_super { font-size: 65%; }
 #mpawqtcegm .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #mpawqtcegm .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
</section>
<section id="utilizing-the-locations-parameter-in-gt.tab_style-pass-a-list-of-loc.body-objects" class="level2">
<h2 class="anchored" data-anchor-id="utilizing-the-locations-parameter-in-gt.tab_style-pass-a-list-of-loc.body-objects">Utilizing the <code>locations=</code> Parameter in <code>GT.tab_style()</code>: Pass a List of <code>loc.body()</code> Objects</h2>
<p>A more concise method is to pass a list of <code>loc.body()</code> objects to the <code>locations=</code> parameter in <code>GT.tab_style()</code>, as shown below:</p>
<div id="28af2de8" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">(</span>
<span id="cb2-2">    gt.tab_style(</span>
<span id="cb2-3">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="cb2-4">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb2-5">            loc.body(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col, rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pl.col(col).gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="cb2-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> year_cols</span>
<span id="cb2-7">        ],</span>
<span id="cb2-8">    )</span>
<span id="cb2-9">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div id="skfsganaey" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#skfsganaey table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#skfsganaey thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#skfsganaey p { margin: 0; padding: 0; }
 #skfsganaey .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #skfsganaey .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #skfsganaey .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #skfsganaey .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #skfsganaey .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #skfsganaey .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #skfsganaey .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #skfsganaey .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #skfsganaey .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #skfsganaey .gt_column_spanner_outer:first-child { padding-left: 0; }
 #skfsganaey .gt_column_spanner_outer:last-child { padding-right: 0; }
 #skfsganaey .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #skfsganaey .gt_spanner_row { border-bottom-style: hidden; }
 #skfsganaey .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #skfsganaey .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #skfsganaey .gt_from_md> :first-child { margin-top: 0; }
 #skfsganaey .gt_from_md> :last-child { margin-bottom: 0; }
 #skfsganaey .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #skfsganaey .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #skfsganaey .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #skfsganaey .gt_row_group_first td { border-top-width: 2px; }
 #skfsganaey .gt_row_group_first th { border-top-width: 2px; }
 #skfsganaey .gt_striped { background-color: #F4F4F4; }
 #skfsganaey .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #skfsganaey .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #skfsganaey .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #skfsganaey .gt_left { text-align: left; }
 #skfsganaey .gt_center { text-align: center; }
 #skfsganaey .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #skfsganaey .gt_font_normal { font-weight: normal; }
 #skfsganaey .gt_font_bold { font-weight: bold; }
 #skfsganaey .gt_font_italic { font-style: italic; }
 #skfsganaey .gt_super { font-size: 65%; }
 #skfsganaey .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #skfsganaey .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
</section>
<section id="leveraging-the-mask-parameter-in-loc.body-use-polars-expressions-for-streamlined-styling" class="level2">
<h2 class="anchored" data-anchor-id="leveraging-the-mask-parameter-in-loc.body-use-polars-expressions-for-streamlined-styling">Leveraging the <code>mask=</code> Parameter in <code>loc.body()</code>: Use Polars Expressions for Streamlined Styling</h2>
<p>The most modern approach (<code>0.16.0</code>) is to pass a Polars expression to the <code>mask=</code> parameter in <code>loc.body()</code>, as illustrated here:</p>
<div id="66500415" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">(</span>
<span id="cb3-2">    gt.tab_style(</span>
<span id="cb3-3">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>),</span>
<span id="cb3-4">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cs.numeric().gt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>))</span>
<span id="cb3-5">    )</span>
<span id="cb3-6">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div id="dwfjmxhhtj" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#dwfjmxhhtj table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#dwfjmxhhtj thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#dwfjmxhhtj p { margin: 0; padding: 0; }
 #dwfjmxhhtj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #004D80; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #004D80; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #dwfjmxhhtj .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #dwfjmxhhtj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #dwfjmxhhtj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #dwfjmxhhtj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #dwfjmxhhtj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #dwfjmxhhtj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #dwfjmxhhtj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #dwfjmxhhtj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #dwfjmxhhtj .gt_column_spanner_outer:first-child { padding-left: 0; }
 #dwfjmxhhtj .gt_column_spanner_outer:last-child { padding-right: 0; }
 #dwfjmxhhtj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #dwfjmxhhtj .gt_spanner_row { border-bottom-style: hidden; }
 #dwfjmxhhtj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #dwfjmxhhtj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; vertical-align: middle; }
 #dwfjmxhhtj .gt_from_md> :first-child { margin-top: 0; }
 #dwfjmxhhtj .gt_from_md> :last-child { margin-bottom: 0; }
 #dwfjmxhhtj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #89D3FE; border-left-style: none; border-left-width: 1px; border-left-color: #89D3FE; border-right-style: none; border-right-width: 1px; border-right-color: #89D3FE; vertical-align: middle; overflow-x: hidden; }
 #dwfjmxhhtj .gt_stub { color: #FFFFFF; background-color: #0076BA; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #0076BA; padding-left: 5px; padding-right: 5px; }
 #dwfjmxhhtj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #dwfjmxhhtj .gt_row_group_first td { border-top-width: 2px; }
 #dwfjmxhhtj .gt_row_group_first th { border-top-width: 2px; }
 #dwfjmxhhtj .gt_striped { background-color: #F4F4F4; }
 #dwfjmxhhtj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #0076BA; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #0076BA; }
 #dwfjmxhhtj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #dwfjmxhhtj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #dwfjmxhhtj .gt_left { text-align: left; }
 #dwfjmxhhtj .gt_center { text-align: center; }
 #dwfjmxhhtj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #dwfjmxhhtj .gt_font_normal { font-weight: normal; }
 #dwfjmxhhtj .gt_font_bold { font-weight: bold; }
 #dwfjmxhhtj .gt_font_italic { font-style: italic; }
 #dwfjmxhhtj .gt_super { font-size: 65%; }
 #dwfjmxhhtj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #dwfjmxhhtj .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>

<tr class="gt_col_headings">
  <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id=""></th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2014">2014</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2015">2015</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2016">2016</th>
  <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="2017">2017</th>
</tr>
</thead>
<tbody class="gt_table_body">
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Ferrari</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">652.0</td>
    <td class="gt_row gt_right">None</td>
    <td style="color: red;" class="gt_row gt_right">680.0</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">562.0</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">678.4</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">661.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">Lamborghini</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td style="color: red;" class="gt_row gt_right gt_striped">700.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right">550.0</td>
    <td class="gt_row gt_right">610.0</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr class="gt_group_heading_row">
    <th class="gt_group_heading" colspan="5">BMW</th>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">awd</th>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">None</td>
    <td class="gt_row gt_right">357.0</td>
    <td class="gt_row gt_right">None</td>
  </tr>
  <tr>
    <th class="gt_row gt_left gt_stub">rwd</th>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">None</td>
    <td class="gt_row gt_right gt_striped">465.0</td>
    <td class="gt_row gt_right gt_striped">None</td>
  </tr>
</tbody>


</table>

</div>
        
</div>
</div>
<p>In this example, <code>loc.body()</code> is smart enough to automatically target the rows where the cell value exceeds 650 for each numerical column. In general, you can think of <code>mask=</code> as a syntactic sugar that Great Tables provides to save you from having to manually loop through the columns.</p>
</section>
<section id="final-words" class="level2">
<h2 class="anchored" data-anchor-id="final-words">Final Words</h2>
<p>This post summarizes three approaches to styling the table body. Among them, the <code>mask=</code> parameter in <code>loc.body()</code> is definitely my favorite, inspired by <a href="https://github.com/posit-dev/great-tables/issues/389">#389</a> and implemented by me.</p>
<p>Special thanks to <a href="https://github.com/rich-iannone"><span class="citation" data-cites="rich-iannone">@rich-iannone</span></a> and <a href="https://github.com/machow"><span class="citation" data-cites="machow">@machow</span></a> for their invaluable suggestions during development. Any remaining bugs are entirely on me.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>polars</category>
  <category>gt</category>
  <guid>https://tech.ycwu.space/posts/style-table-body/20250124.html</guid>
  <pubDate>Fri, 24 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/style-table-body/table_body.png" medium="image" type="image/png" height="210" width="144"/>
</item>
<item>
  <title>Exploring Resend SMTP Service with Django</title>
  <dc:creator>Jerry Wu</dc:creator>
  <link>https://tech.ycwu.space/posts/django-allauth-resend/20241223.html</link>
  <description><![CDATA[ 





<p>This post demonstrates how to integrate <a href="https://resend.com/">Resend</a> with <a href="https://docs.allauth.org/en/latest/">django-allauth</a> seamlessly in a <code>Django</code> project. If you’re looking to use <code>Resend</code> for sending emails via <code>Django</code>, refer to the <a href="https://github.com/resend/resend-django-smtp-example">repo</a> provided by <code>Resend</code>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The code featured in this post is available in this <a href="https://github.com/jrycw/django-allauth-resend-demo/">repo</a>.</p>
</div>
</div>
<section id="preparations-for-django" class="level2">
<h2 class="anchored" data-anchor-id="preparations-for-django">Preparations for Django</h2>
<section id="create-a-virtual-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-virtual-environment">Create a Virtual Environment</h3>
<p>Start by creating a virtual environment using <a href="https://github.com/astral-sh/uv">uv</a> and activating it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> venv venv</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> venv/bin/activate</span></code></pre></div>
</section>
<section id="install-required-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-required-packages">Install Required Packages</h3>
<p>Create a <code>requirements.txt</code> file and add the necessary dependencies:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">django</span>
<span id="cb2-2">environs[django]</span>
<span id="cb2-3">django<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>allauth</span></code></pre></div>
<p>Install the packages via <code>uv</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uv</span> pip install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span></code></pre></div>
</section>
<section id="set-up-a-django-project" class="level3">
<h3 class="anchored" data-anchor-id="set-up-a-django-project">Set Up a Django Project</h3>
<p>Use the <code>django-admin</code> command to create a project named <code>core</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">django-admin</span> startproject core .</span></code></pre></div>
</section>
<section id="configure-environment-variables" class="level3">
<h3 class="anchored" data-anchor-id="configure-environment-variables">Configure Environment Variables</h3>
<p>Create a <code>.env</code> file with the following content:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">DEFAULT_FROM_EMAIL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb5-2">RESEND_SMTP_HOST<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>smtp.resend.com</span>
<span id="cb5-3">RESEND_SMTP_USERNAME<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>resend</span>
<span id="cb5-4">RESEND_API_KEY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span></span>
<span id="cb5-5">RESEND_SMTP_PORT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">587</span></span>
<span id="cb5-6">RESEND_USE_TLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
<p>The next sections explain how to obtain <code>DEFAULT_FROM_EMAIL</code> and <code>RESEND_API_KEY</code>.</p>
<hr>
</section>
</section>
<section id="preparations-for-resend" class="level2">
<h2 class="anchored" data-anchor-id="preparations-for-resend">Preparations for Resend</h2>
<section id="verify-your-domain" class="level3">
<h3 class="anchored" data-anchor-id="verify-your-domain">Verify Your Domain</h3>
<p>Follow the <a href="https://resend.com/docs/dashboard/domains/introduction">Resend documentation</a> to verify your domain. Once verified, you can send emails using an address like <code>user@send.yourdomain.com</code>.</p>
<ul>
<li>You control the prefix before <code>@</code>, as ownership of the domain has been confirmed.<br>
</li>
<li>Add your chosen email to <code>DEFAULT_FROM_EMAIL</code> in the <code>.env</code> file.</li>
</ul>
</section>
<section id="obtain-an-api-key" class="level3">
<h3 class="anchored" data-anchor-id="obtain-an-api-key">Obtain an API Key</h3>
<p>Generate an API key via the <a href="https://resend.com/api-keys">Resend API Keys page</a> and add it to the <code>RESEND_API_KEY</code> field in your <code>.env</code> file.</p>
</section>
</section>
<section id="django-scaffold" class="level2">
<h2 class="anchored" data-anchor-id="django-scaffold">Django Scaffold</h2>
<p>Follow the <a href="https://docs.allauth.org/en/latest/installation/quickstart.html">quick start guide</a> from <code>django-allauth</code> to configure the project with minimal setup.</p>
<section id="modify-coreurls.py" class="level3">
<h3 class="anchored" data-anchor-id="modify-coreurls.py">Modify <code>core/urls.py</code></h3>
<p>Include <code>django-allauth</code> routes and define a homepage route:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/urls.py</span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.contrib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> admin</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.urls <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> path, include</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> . <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> views</span>
<span id="cb6-6"></span>
<span id="cb6-7">urlpatterns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb6-8">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"admin/"</span>, admin.site.urls),</span>
<span id="cb6-9">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accounts/"</span>, include(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.urls"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb6-10">    path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, views.index, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb6-11">]</span></code></pre></div>
</section>
<section id="add-coreviews.py" class="level3">
<h3 class="anchored" data-anchor-id="add-coreviews.py">Add <code>core/views.py</code></h3>
<p>Define the homepage with a link to the signup URL provided by <code>django-allauth</code>:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.http <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HttpResponse</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> django.urls <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> reverse</span>
<span id="cb7-3"></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> index(request):</span>
<span id="cb7-6">    signup_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reverse(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"account_signup"</span>)</span>
<span id="cb7-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> HttpResponse(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;a href="</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>signup_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;Hello, please Sign Up here!&lt;/a&gt;'</span>)</span></code></pre></div>
</section>
<section id="modify-coresettings.py" class="level3">
<h3 class="anchored" data-anchor-id="modify-coresettings.py">Modify <code>core/settings.py</code></h3>
<section id="read-environment-variables" class="level4">
<h4 class="anchored" data-anchor-id="read-environment-variables">Read Environment Variables</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> environs <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Env</span>
<span id="cb8-4"></span>
<span id="cb8-5">env <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Env()</span>
<span id="cb8-6">env.read_env()</span></code></pre></div>
</section>
<section id="update-installed_apps" class="level4">
<h4 class="anchored" data-anchor-id="update-installed_apps">Update INSTALLED_APPS</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">INSTALLED_APPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb9-4">    ...</span>
<span id="cb9-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb9-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb9-7">]</span></code></pre></div>
</section>
<section id="update-middleware" class="level4">
<h4 class="anchored" data-anchor-id="update-middleware">Update MIDDLEWARE</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb10-2"></span>
<span id="cb10-3">MIDDLEWARE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb10-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.security.SecurityMiddleware"</span>,</span>
<span id="cb10-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.sessions.middleware.SessionMiddleware"</span>,</span>
<span id="cb10-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.common.CommonMiddleware"</span>,</span>
<span id="cb10-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.middleware.csrf.CsrfViewMiddleware"</span>,</span>
<span id="cb10-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.auth.middleware.AuthenticationMiddleware"</span>,</span>
<span id="cb10-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.messages.middleware.MessageMiddleware"</span>,</span>
<span id="cb10-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account.middleware.AccountMiddleware"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># added</span></span>
<span id="cb10-11">    ...</span>
<span id="cb10-12">]</span></code></pre></div>
</section>
<section id="configure-email-backend-and-authentication-backends" class="level4">
<h4 class="anchored" data-anchor-id="configure-email-backend-and-authentication-backends">Configure Email Backend and Authentication Backends</h4>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># core/settings.py</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">EMAIL_BACKEND <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.core.mail.backends.smtp.EmailBackend"</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">AUTHENTICATION_BACKENDS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb11-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"django.contrib.auth.backends.ModelBackend"</span>,</span>
<span id="cb11-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allauth.account.auth_backends.AuthenticationBackend"</span>,</span>
<span id="cb11-8">]</span></code></pre></div>
</section>
<section id="define-login-and-logout-redirect-urls" class="level4">
<h4 class="anchored" data-anchor-id="define-login-and-logout-redirect-urls">Define Login and Logout Redirect URLs</h4>
<p>Here, we define only <code>ACCOUNT_LOGOUT_REDIRECT_URL</code> because <code>django-allauth</code> overwrites <code>LOGOUT_REDIRECT_URL</code>.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">LOGIN_REDIRECT_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span></span>
<span id="cb12-2">ACCOUNT_LOGOUT_REDIRECT_URL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span></span></code></pre></div>
</section>
<section id="optional-preference-settings" class="level4">
<h4 class="anchored" data-anchor-id="optional-preference-settings">Optional Preference Settings</h4>
<p>Opinionated configurations for a simplified signup and email-based login:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-2">ACCOUNT_USERNAME_REQUIRED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb13-3">ACCOUNT_AUTHENTICATION_METHOD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span></span>
<span id="cb13-4">ACCOUNT_EMAIL_REQUIRED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb13-5">ACCOUNT_UNIQUE_EMAIL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</section>
<section id="define-resend-variables" class="level4">
<h4 class="anchored" data-anchor-id="define-resend-variables">Define Resend Variables</h4>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">DEFAULT_FROM_EMAIL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DEFAULT_FROM_EMAIL"</span>)</span>
<span id="cb14-2">RESEND_SMTP_HOST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_HOST"</span>)</span>
<span id="cb14-3">RESEND_SMTP_USERNAME <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_USERNAME"</span>)</span>
<span id="cb14-4">RESEND_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_API_KEY"</span>)</span>
<span id="cb14-5">RESEND_SMTP_PORT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_SMTP_PORT"</span>)</span>
<span id="cb14-6">RESEND_USE_TLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> env.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RESEND_USE_TLS"</span>)</span></code></pre></div>
</section>
<section id="map-resend-variables-to-django-email-variables" class="level4">
<h4 class="anchored" data-anchor-id="map-resend-variables-to-django-email-variables">Map Resend Variables to Django Email Variables</h4>
<p>Delegate <code>Django</code> email settings to <code>Resend</code> environment variables:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">EMAIL_HOST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_HOST</span>
<span id="cb15-2">EMAIL_HOST_USER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_USERNAME</span>
<span id="cb15-3">EMAIL_HOST_PASSWORD <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_API_KEY</span>
<span id="cb15-4">EMAIL_PORT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_SMTP_PORT</span>
<span id="cb15-5">EMAIL_USE_TLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RESEND_USE_TLS</span></code></pre></div>
</section>
</section>
</section>
<section id="tryout" class="level2">
<h2 class="anchored" data-anchor-id="tryout">Tryout</h2>
<p>Migrate the database and run the development server with the following commands:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> manage.py migrate</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> manage.py runserver</span></code></pre></div>
<p>Now, go to <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a> and click the sign-up link. You should see the signup page. After submitting the form, you will be redirected to the homepage.</p>
<p>Next, check your inbox for an email with the subject <code>[127.0.0.1:8000] Please Confirm Your Email Address</code>.</p>
<p>The email will contain a confirmation link. Click the link, then click the confirmation button, and you’re all set for user registration!</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you encounter issues during configuration, the <a href="https://resend.com/logs">Resend logs</a> can be a helpful resource, as they provide the request body, response body, and status code. <img src="https://tech.ycwu.space/posts/django-allauth-resend/resend_logs.png" class="img-fluid" alt="resend_logs.png"></p>
</div>
</div>
</section>
<section id="final-words" class="level2">
<h2 class="anchored" data-anchor-id="final-words">Final Words</h2>
<p>The configuration is straightforward, and it’s great that <code>Resend</code> offers SMTP services. The modern dashboard operates smoothly, and the well-documented resources make it easy for developers to find needed information. So far, the user experience has been positive, and I look forward to using it in real projects.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Disclaimer
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post was drafted by me, with AI assistance to refine the content.</p>
</div>
</div>


</section>

 ]]></description>
  <category>python</category>
  <category>django</category>
  <category>resend</category>
  <guid>https://tech.ycwu.space/posts/django-allauth-resend/20241223.html</guid>
  <pubDate>Mon, 23 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://tech.ycwu.space/posts/django-allauth-resend/resend_logs.png" medium="image" type="image/png" height="55" width="144"/>
</item>
</channel>
</rss>
